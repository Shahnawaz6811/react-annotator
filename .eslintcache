[{"/Users/shahn/dev/annotator/custom_annotator/src/components/Annotator.js":"1","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/history-handler.js":"2","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/video-reducer.js":"3","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/get-active-image.js":"4","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/MainLayout/styles.js":"5","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/MainLayout/use-implied-video-regions.js":"6","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/SettingsDialog/index.js":"7","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/TaskDescriptionSidebarBox/index.js":"8","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageSelectorSidebarBox/index.js":"9","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/KeyframesSelectorSidebarBox/index.js":"10","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/KeyframeTimeline/index.js":"11","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/Workspace/index.js":"12","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageCanvas/index.js":"13","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionSelectorSidebarBox/styles.js":"14","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/fix-twisted.js":"15","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/colors.js":"16","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/convert-expanding-line-to-polygon.js":"17","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionLabel/index.js":"18","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/utils/get-landmarks-with-transform.js":"19","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/icon-dictionary.js":"20","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/ImageSwitcher/index.js":"21","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionShapes/index.js":"22","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/hooks/use-window-size.js":"23","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageCanvas/use-mouse.js":"24","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/LeftSidebar/styles.js":"25","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/hooks/xpattern.js":"26","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/LeftSidebar/ObjectSelector.js":"27","/Users/shahn/dev/annotator/custom_annotator/src/index.js":"28","/Users/shahn/dev/annotator/custom_annotator/src/components/message.js":"29","/Users/shahn/dev/annotator/custom_annotator/src/components/images.js":"30","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/index.js":"31","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/MainLayout/index.js":"32","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageCanvas/region-tools.js":"33","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/TagsSidebarBox/index.js":"34","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionSelectorSidebarBox/index.js":"35","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/hooks/use-exclude-pattern.js":"36","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/WorkContainer/index.js":"37","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/Toolbar/index.js":"38","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Crosshairs/index.js":"39","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/PointDistances/index.js":"40","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageMask/index.js":"41","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/icon-mapping.js":"42","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionLabel/styles.js":"43","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/FooterButton/index.js":"44","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/HighlightBox/index.js":"45","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/Footer/index.js":"46","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/LeftSidebar/LabelSelector.js":"47","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/general-reducer.js":"48","/Users/shahn/dev/annotator/custom_annotator/src/reportWebVitals.js":"49","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/SettingsProvider/index.js":"50","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/get-implied-video-regions.js":"51","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/MainLayout/icon-dictionary.js":"52","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/DebugSidebarBox/index.js":"53","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/PreventScrollToParents/index.js":"54","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionSelectAndTransformBoxes/index.js":"55","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageMask/load-image.js":"56","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/image-reducer.js":"57","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/HistorySidebarBox/index.js":"58","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/SidebarBoxContainer/index.js":"59","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionTags/index.js":"60","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/VideoOrImageCanvasBackground/index.js":"61","/Users/shahn/dev/annotator/custom_annotator/src/App.js":"62"},{"size":767,"mtime":1607609853082,"results":"63","hashOfConfig":"64"},{"size":1572,"mtime":1607516108710,"results":"65","hashOfConfig":"64"},{"size":2331,"mtime":1607516108712,"results":"66","hashOfConfig":"64"},{"size":712,"mtime":1607516108709,"results":"67","hashOfConfig":"64"},{"size":507,"mtime":1607516108738,"results":"68","hashOfConfig":"64"},{"size":550,"mtime":1607516108740,"results":"69","hashOfConfig":"64"},{"size":1820,"mtime":1607516108748,"results":"70","hashOfConfig":"64"},{"size":1129,"mtime":1607516108755,"results":"71","hashOfConfig":"64"},{"size":1856,"mtime":1607595169190,"results":"72","hashOfConfig":"64"},{"size":2287,"mtime":1607516108733,"results":"73","hashOfConfig":"64"},{"size":5486,"mtime":1607516108732,"results":"74","hashOfConfig":"64"},{"size":3374,"mtime":1607602654515,"results":"75","hashOfConfig":"64"},{"size":14575,"mtime":1607601359014,"results":"76","hashOfConfig":"64"},{"size":1047,"mtime":1607516108745,"results":"77","hashOfConfig":"64"},{"size":161,"mtime":1607516108707,"results":"78","hashOfConfig":"64"},{"size":766,"mtime":1607516108759,"results":"79","hashOfConfig":"64"},{"size":1624,"mtime":1607516108706,"results":"80","hashOfConfig":"64"},{"size":5077,"mtime":1607516108743,"results":"81","hashOfConfig":"64"},{"size":561,"mtime":1607516108768,"results":"82","hashOfConfig":"64"},{"size":235,"mtime":1607516108783,"results":"83","hashOfConfig":"64"},{"size":778,"mtime":1607590507378,"results":"84","hashOfConfig":"64"},{"size":6827,"mtime":1607603667791,"results":"85","hashOfConfig":"64"},{"size":1058,"mtime":1607516108764,"results":"86","hashOfConfig":"64"},{"size":4753,"mtime":1607516108727,"results":"87","hashOfConfig":"64"},{"size":1010,"mtime":1607516108774,"results":"88","hashOfConfig":"64"},{"size":281,"mtime":1607516108765,"results":"89","hashOfConfig":"64"},{"size":6678,"mtime":1607516108772,"results":"90","hashOfConfig":"64"},{"size":457,"mtime":1606844306078,"results":"91","hashOfConfig":"64"},{"size":336,"mtime":1607501775159,"results":"92","hashOfConfig":"64"},{"size":1274,"mtime":1607348995824,"results":"93","hashOfConfig":"64"},{"size":6107,"mtime":1607603038880,"results":"94","hashOfConfig":"64"},{"size":12320,"mtime":1607595150548,"results":"95","hashOfConfig":"64"},{"size":3609,"mtime":1607516108725,"results":"96","hashOfConfig":"64"},{"size":2765,"mtime":1607516108755,"results":"97","hashOfConfig":"64"},{"size":5511,"mtime":1607516108745,"results":"98","hashOfConfig":"64"},{"size":734,"mtime":1607516108761,"results":"99","hashOfConfig":"64"},{"size":687,"mtime":1607516108779,"results":"100","hashOfConfig":"64"},{"size":2261,"mtime":1607596655567,"results":"101","hashOfConfig":"64"},{"size":1375,"mtime":1607516108713,"results":"102","hashOfConfig":"64"},{"size":2417,"mtime":1607516108740,"results":"103","hashOfConfig":"64"},{"size":3293,"mtime":1607516108729,"results":"104","hashOfConfig":"64"},{"size":3440,"mtime":1607595839870,"results":"105","hashOfConfig":"64"},{"size":953,"mtime":1607516108743,"results":"106","hashOfConfig":"64"},{"size":306,"mtime":1607590320269,"results":"107","hashOfConfig":"64"},{"size":3476,"mtime":1607516108722,"results":"108","hashOfConfig":"64"},{"size":3084,"mtime":1607600007061,"results":"109","hashOfConfig":"64"},{"size":6338,"mtime":1607538107579,"results":"110","hashOfConfig":"64"},{"size":35160,"mtime":1607602905846,"results":"111","hashOfConfig":"64"},{"size":362,"mtime":1606488260403,"results":"112","hashOfConfig":"64"},{"size":1280,"mtime":1607516108749,"results":"113","hashOfConfig":"64"},{"size":2803,"mtime":1607516108709,"results":"114","hashOfConfig":"64"},{"size":2733,"mtime":1607516108736,"results":"115","hashOfConfig":"64"},{"size":1014,"mtime":1607516108714,"results":"116","hashOfConfig":"64"},{"size":1078,"mtime":1607516108741,"results":"117","hashOfConfig":"64"},{"size":7356,"mtime":1607516108744,"results":"118","hashOfConfig":"64"},{"size":810,"mtime":1607516108730,"results":"119","hashOfConfig":"64"},{"size":639,"mtime":1607516108711,"results":"120","hashOfConfig":"64"},{"size":2202,"mtime":1607516108723,"results":"121","hashOfConfig":"64"},{"size":2624,"mtime":1607521058504,"results":"122","hashOfConfig":"64"},{"size":3678,"mtime":1607516108747,"results":"123","hashOfConfig":"64"},{"size":4855,"mtime":1607578792880,"results":"124","hashOfConfig":"64"},{"size":718,"mtime":1607504228876,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18saq4t",{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"131"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"131"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"131"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"131"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"151"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"131"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"131"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"151"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"151"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"177"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"131"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"151"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"131"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"131"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"131"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"151"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"151"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"131"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"131"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"276"},"/Users/shahn/dev/annotator/custom_annotator/src/components/Annotator.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/history-handler.js",["277","278"],"// @flow\r\n\r\nimport type { MainLayoutState, Action } from \"../../MainLayout/types\"\r\nimport { setIn, updateIn, asMutable, without } from \"seamless-immutable\"\r\nimport moment from \"moment\"\r\n\r\nconst typesToSaveWithHistory = {\r\n  BEGIN_BOX_TRANSFORM: \"Transform/Move Box\",\r\n  BEGIN_MOVE_POINT: \"Move Point\",\r\n  DELETE_REGION: \"Delete Region\",\r\n}\r\n\r\nexport const saveToHistory = (state: MainLayoutState, name: string) =>\r\n  updateIn(state, [\"history\"], (h) =>\r\n    [\r\n      {\r\n        time: moment().toDate(),\r\n        state: without(state, \"history\"),\r\n        name,\r\n      },\r\n    ].concat((h || []).slice(0, 9))\r\n  )\r\n\r\nexport default (reducer) => {\r\n  return (state: MainLayoutState, action: Action) => {\r\n    const prevState = state\r\n    const nextState = reducer(state, action)\r\n\r\n    if (action.type === \"RESTORE_HISTORY\") {\r\n      if (state.history.length > 0) {\r\n        return setIn(\r\n          nextState.history[0].state,\r\n          [\"history\"],\r\n          nextState.history.slice(1)\r\n        )\r\n      }\r\n    } else {\r\n      if (\r\n        prevState !== nextState &&\r\n        Object.keys(typesToSaveWithHistory).includes(action.type)\r\n      ) {\r\n        return setIn(\r\n          nextState,\r\n          [\"history\"],\r\n          [\r\n            {\r\n              time: moment().toDate(),\r\n              state: without(prevState, \"history\"),\r\n              name: typesToSaveWithHistory[action.type] || action.type,\r\n            },\r\n          ]\r\n            .concat(nextState.history || [])\r\n            .slice(0, 9)\r\n        )\r\n      }\r\n    }\r\n\r\n    return nextState\r\n  }\r\n}\r\n",["279","280"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/video-reducer.js",["281","282","283","284"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/get-active-image.js",["285"],"import { getIn } from \"seamless-immutable\"\r\n\r\nexport default (state) => {\r\n  let currentImageIndex = null,\r\n    pathToActiveImage,\r\n    activeImage\r\n  if (state.annotationType === \"image\") {\r\n    currentImageIndex = state.selectedImage\r\n    if (currentImageIndex === -1) {\r\n      currentImageIndex = null\r\n      activeImage = null\r\n    } else {\r\n      pathToActiveImage = [\"images\", currentImageIndex]\r\n      activeImage = getIn(state, pathToActiveImage)\r\n    }\r\n  } else if (state.annotationType === \"video\") {\r\n    pathToActiveImage = [\"keyframes\", state.currentVideoTime || 0]\r\n    activeImage = getIn(state, pathToActiveImage) || null\r\n  }\r\n  return { currentImageIndex, pathToActiveImage, activeImage }\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/MainLayout/styles.js",["286"],"import { grey } from \"@material-ui/core/colors\"\r\n\r\nexport default {\r\n  container: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    maxHeight: \"100vh\",\r\n    backgroundColor: \"#fff\",\r\n    overflow: \"hidden\",\r\n    \"&.fullscreen\": {\r\n      position: \"absolute\",\r\n      zIndex: 99999,\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n    },\r\n  },\r\n  headerTitle: {\r\n    fontWeight: \"bold\",\r\n    color: grey[700],\r\n    paddingLeft: 16,\r\n  },\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/MainLayout/use-implied-video-regions.js",["287"],"// @flow\r\n\r\nimport { useMemo } from \"react\"\r\nimport type { MainLayoutVideoAnnotationState } from \"../Annotator/types\"\r\nimport getImpliedVideoRegions from \"../Annotator/reducers/get-implied-video-regions.js\"\r\n\r\nconst emptyArr = []\r\n\r\nexport default (state: MainLayoutVideoAnnotationState) => {\r\n  if (state.annotationType !== \"video\") return emptyArr\r\n  const { keyframes, currentVideoTime = 0 } = state\r\n  // TODO memoize\r\n  return useMemo(() => getImpliedVideoRegions(keyframes, currentVideoTime), [\r\n    keyframes,\r\n    currentVideoTime,\r\n  ])\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/SettingsDialog/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/TaskDescriptionSidebarBox/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageSelectorSidebarBox/index.js",["288","289","290","291","292"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/KeyframesSelectorSidebarBox/index.js",[],["293","294"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/KeyframeTimeline/index.js",["295","296","297"],"// @flow weak\r\n\r\nimport React, { useMemo, useState, useEffect } from \"react\"\r\nimport { styled } from \"@material-ui/core/styles\"\r\nimport range from \"lodash/range\"\r\nimport * as colors from \"@material-ui/core/colors\"\r\nimport useMeasure from \"react-use-measure\"\r\nimport useEventCallback from \"use-event-callback\"\r\nimport { useRafState } from \"react-use\"\r\nimport getTimeString from \"./get-time-string\"\r\n\r\nconst Container = styled(\"div\")({\r\n  position: \"relative\",\r\n  display: \"flex\",\r\n  flexGrow: 1,\r\n  minWidth: 240,\r\n  height: 64,\r\n  marginLeft: 16,\r\n  marginRight: 16,\r\n})\r\n\r\nconst Tick = styled(\"div\")({\r\n  position: \"absolute\",\r\n  width: 2,\r\n  marginLeft: -1,\r\n  height: \"100%\",\r\n  backgroundColor: colors.grey[300],\r\n  bottom: 0,\r\n})\r\nconst TickText = styled(\"div\")({\r\n  position: \"absolute\",\r\n  userSelect: \"none\",\r\n  fontSize: 10,\r\n  color: colors.grey[600],\r\n  fontWeight: \"bold\",\r\n  bottom: 0,\r\n})\r\n\r\nconst PositionCursor = styled(\"div\")({\r\n  position: \"absolute\",\r\n  bottom: \"calc(50% + 6px)\",\r\n  fontSize: 10,\r\n  fontWeight: \"bold\",\r\n  color: \"#fff\",\r\n  display: \"grid\",\r\n  placeItems: \"center\",\r\n  width: 48,\r\n  marginLeft: -24,\r\n  borderRadius: 2,\r\n  height: 24,\r\n  backgroundColor: colors.blue[500],\r\n  userSelect: \"none\",\r\n  fontVariantNumeric: \"tabular-nums\",\r\n\r\n  \"&::before\": {\r\n    position: \"absolute\",\r\n    bottom: -6,\r\n    left: 24 - 8,\r\n    content: '\"\"',\r\n    width: 0,\r\n    height: 0,\r\n    borderTop: `8px solid ${colors.blue[500]}`,\r\n    borderLeft: \"8px solid transparent\",\r\n    borderRight: \"8px solid transparent\",\r\n  },\r\n})\r\n\r\nconst KeyframeMarker = styled(\"div\")({\r\n  position: \"absolute\",\r\n  bottom: 8,\r\n  cursor: \"pointer\",\r\n  opacity: 0.75,\r\n  fontSize: 10,\r\n  fontWeight: \"bold\",\r\n  color: \"#fff\",\r\n  display: \"grid\",\r\n  placeItems: \"center\",\r\n  width: 16,\r\n  marginLeft: 0,\r\n  borderTopLeftRadius: 2,\r\n  borderTopRightRadius: 2,\r\n  height: 12,\r\n  marginLeft: -8,\r\n  backgroundColor: colors.red[500],\r\n  userSelect: \"none\",\r\n  fontVariantNumeric: \"tabular-nums\",\r\n\r\n  \"&::before\": {\r\n    position: \"absolute\",\r\n    bottom: -8,\r\n    left: 0,\r\n    content: '\"\"',\r\n    width: 0,\r\n    height: 0,\r\n    borderTop: `8px solid ${colors.red[500]}`,\r\n    borderLeft: \"8px solid transparent\",\r\n    borderRight: \"8px solid transparent\",\r\n  },\r\n})\r\n\r\nconst min = 60000\r\nconst displayIntervalPairs = [\r\n  [50, 250],\r\n  [100, 500],\r\n  [250, 1000],\r\n  [1000, 5000],\r\n  [5000, 30000],\r\n  [10000, min],\r\n  [30000, min * 2],\r\n  [min, min * 5],\r\n  [min * 5, min * 30],\r\n  [min * 10, min * 60],\r\n  [min * 30, min * 60 * 3],\r\n  [min * 60, min * 60 * 5],\r\n]\r\n\r\nconst getMajorInterval = (duration) => {\r\n  for (const [minor, major] of displayIntervalPairs) {\r\n    if (duration / major < 6 && duration / major > 2) {\r\n      return [minor, major]\r\n    }\r\n  }\r\n  return [duration / 4, duration]\r\n}\r\n\r\nexport default ({\r\n  currentTime = 0,\r\n  duration,\r\n  onChangeCurrentTime,\r\n  keyframes,\r\n}) => {\r\n  const [ref, bounds] = useMeasure()\r\n  const [instantCurrentTime, changeInstantCurrentTime] = useState(currentTime)\r\n  const [draggingTime, changeDraggingTime] = useRafState(false)\r\n  const keyframeTimes = Object.keys(keyframes || {})\r\n    .map((t) => parseInt(t))\r\n    .filter((t) => !isNaN(t))\r\n    .sort((a, b) => a - b)\r\n\r\n  useEffect(() => {\r\n    if (currentTime !== instantCurrentTime) {\r\n      changeInstantCurrentTime(currentTime)\r\n    }\r\n  }, [currentTime])\r\n\r\n  const [minorInterval, majorInterval] = useMemo(\r\n    () => getMajorInterval(duration),\r\n    [duration]\r\n  )\r\n\r\n  const onMouseMove = useEventCallback((e) => {\r\n    if (draggingTime) {\r\n      const px = (e.clientX - bounds.left) / bounds.width\r\n      changeInstantCurrentTime(\r\n        Math.min(duration, Math.max(0, Math.floor(px * duration)))\r\n      )\r\n    }\r\n  })\r\n\r\n  const onMouseUp = useEventCallback((e) => {\r\n    changeDraggingTime(false)\r\n    const px = (e.clientX - bounds.left) / bounds.width\r\n    const newTime = Math.min(duration, Math.max(0, Math.floor(px * duration)))\r\n    changeInstantCurrentTime(newTime)\r\n    onChangeCurrentTime(newTime)\r\n  })\r\n\r\n  // TODO skeleton\r\n  if (!duration) return null\r\n\r\n  return (\r\n    <Container onMouseMove={onMouseMove} onMouseUp={onMouseUp} ref={ref}>\r\n      {range(0, duration, majorInterval).map((a) => (\r\n        <>\r\n          <Tick\r\n            key={a}\r\n            style={{ left: (a / duration) * bounds.width, height: \"50%\" }}\r\n          />\r\n          <TickText\r\n            style={{\r\n              left: (a / duration) * bounds.width + 8,\r\n              bottom: \"calc(50% - 12px)\",\r\n            }}\r\n          >\r\n            {getTimeString(a)}\r\n          </TickText>\r\n        </>\r\n      ))}\r\n      {range(0, duration, minorInterval)\r\n        .filter((a) => !Number.isInteger(a / majorInterval))\r\n        .map((a) => (\r\n          <Tick\r\n            key={a}\r\n            style={{\r\n              left: (a / duration) * bounds.width,\r\n              height: \"25%\",\r\n            }}\r\n          />\r\n        ))}\r\n      {keyframeTimes.map((kt) => (\r\n        <KeyframeMarker\r\n          onClick={() => onChangeCurrentTime(kt)}\r\n          key={kt}\r\n          style={{ left: (kt / duration) * bounds.width }}\r\n        />\r\n      ))}\r\n      <PositionCursor\r\n        onMouseDown={(e) => changeDraggingTime(true)}\r\n        style={{\r\n          cursor: draggingTime ? \"grabbing\" : \"grab\",\r\n          left: (instantCurrentTime / duration) * bounds.width,\r\n        }}\r\n      >\r\n        {getTimeString(instantCurrentTime)}\r\n      </PositionCursor>\r\n    </Container>\r\n  )\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/Workspace/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageCanvas/index.js",["298","299","300","301","302","303","304","305","306","307"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionSelectorSidebarBox/styles.js",["308","309","310"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/fix-twisted.js",["311"],"// @flow\r\n\r\nexport default (pointsWithAngles) => {\r\n  // Adjacent angles should not have an angular distance of more than Math.PI\r\n  return pointsWithAngles\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/colors.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/convert-expanding-line-to-polygon.js",["312"],"// @flow\r\n\r\nfunction clamp(num, min, max) {\r\n  return num <= min ? min : num >= max ? max : num\r\n}\r\n\r\nexport default (expandingLine) => {\r\n  const expandingWidth = expandingLine.expandingWidth || 0.005\r\n  const pointPairs = expandingLine.points.map(({ x, y, angle, width }, i) => {\r\n    if (!angle) {\r\n      const n =\r\n        expandingLine.points[clamp(i + 1, 0, expandingLine.points.length - 1)]\r\n      const p =\r\n        expandingLine.points[clamp(i - 1, 0, expandingLine.points.length - 1)]\r\n      angle = Math.atan2(p.x - n.x, p.y - n.y) + Math.PI / 2\r\n    }\r\n    const dx = (Math.sin(angle) * (width || expandingWidth)) / 2\r\n    const dy = (Math.cos(angle) * (width || expandingWidth)) / 2\r\n    return [\r\n      { x: x + dx, y: y + dy },\r\n      { x: x - dx, y: y - dy },\r\n    ]\r\n  })\r\n  const firstSection = pointPairs.map(([p1, p2]) => p1)\r\n  const secondSection = pointPairs.map(([p1, p2]) => p2).asMutable()\r\n  secondSection.reverse()\r\n\r\n  const newPoints = firstSection.concat(secondSection).map(({ x, y }) => [x, y])\r\n\r\n  return {\r\n    ...expandingLine,\r\n    type: \"polygon\",\r\n    open: false,\r\n    points: newPoints,\r\n    unfinished: undefined,\r\n    candidatePoint: undefined,\r\n  }\r\n\r\n  // let { expandingWidth = 0.005, points } = region\r\n  // expandingWidth = points.slice(-1)[0].width || expandingWidth\r\n  // const lastPoint = points.slice(-1)[0]\r\n  // return (\r\n  //   <>\r\n  //     <polygon\r\n  //       points={\r\n  //         .map((p) => `${p.x * iw} ${p.y * ih}`)\r\n  //         .join(\" \")}\r\n  // return {\r\n  //   ...expandingLine,\r\n  //   unfinished: undefined,\r\n  //   candidatePoint: undefined,\r\n  // }\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionLabel/index.js",["313","314","315"],"// @flow\r\n\r\nimport React, { useState, memo } from \"react\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport styles from \"./styles\"\r\nimport classnames from \"classnames\"\r\nimport type { Region } from \"../ImageCanvas/region-tools.js\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TrashIcon from \"@material-ui/icons/Delete\"\r\nimport CheckIcon from \"@material-ui/icons/Check\"\r\nimport UndoIcon from \"@material-ui/icons/Undo\"\r\nimport Select from \"react-select\"\r\nimport CreatableSelect from \"react-select/creatable\"\r\n\r\nimport { asMutable } from \"seamless-immutable\"\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  region: Region,\r\n  editing?: boolean,\r\n  allowedClasses?: Array<string>,\r\n  allowedTags?: Array<string>,\r\n  cls?: string,\r\n  tags?: Array<string>,\r\n  onDelete: (Region) => null,\r\n  onChange: (Region) => null,\r\n  onClose: (Region) => null,\r\n  onOpen: (Region) => null,\r\n  onRegionClassAdded: () => {},\r\n}\r\n\r\nexport const RegionLabel = ({\r\n  region,\r\n  editing,\r\n  allowedClasses,\r\n  allowedTags,\r\n  onDelete,\r\n  onChange,\r\n  onClose,\r\n  onOpen,\r\n  onRegionClassAdded,\r\n}: Props) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper\r\n      onClick={() => (!editing ? onOpen(region) : null)}\r\n      className={classnames(classes.regionInfo, {\r\n        highlighted: region.highlighted,\r\n      })}\r\n    >\r\n      {!editing ? (\r\n        <div>\r\n          {region.cls && (\r\n            <div className=\"name\">\r\n              <div\r\n                className=\"circle\"\r\n                style={{ backgroundColor: region.color }}\r\n              />\r\n              {region.cls}\r\n            </div>\r\n          )}\r\n          {region.tags && (\r\n            <div className=\"tags\">\r\n              {region.tags.map((t) => (\r\n                <div key={t} className=\"tag\">\r\n                  {t}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div style={{ width: 200 }}>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                backgroundColor: region.color || \"#888\",\r\n                color: \"#fff\",\r\n                padding: 4,\r\n                paddingLeft: 8,\r\n                paddingRight: 8,\r\n                borderRadius: 4,\r\n                fontWeight: \"bold\",\r\n                textShadow: \"0px 0px 5px rgba(0,0,0,0.4)\",\r\n              }}\r\n            >\r\n              {region.type}\r\n            </div>\r\n            <div style={{ flexGrow: 1 }} />\r\n            <IconButton\r\n              onClick={() => onDelete(region)}\r\n              tabIndex={-1}\r\n              style={{ width: 22, height: 22 }}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            >\r\n              <TrashIcon style={{ marginTop: -8, width: 16, height: 16 }} />\r\n            </IconButton>\r\n          </div>\r\n          {(allowedClasses || []).length > 0 && (\r\n            <div style={{ marginTop: 6 }}>\r\n              <CreatableSelect\r\n                placeholder=\"Classification\"\r\n                onChange={(o, actionMeta) => {\r\n                  if (actionMeta.action == \"create-option\") {\r\n                    onRegionClassAdded(o.value)\r\n                  }\r\n                  return onChange({\r\n                    ...(region: any),\r\n                    cls: o.value,\r\n                  })\r\n                }}\r\n                value={\r\n                  region.cls ? { label: region.cls, value: region.cls } : null\r\n                }\r\n                options={asMutable(\r\n                  allowedClasses.map((c) => ({ value: c, label: c }))\r\n                )}\r\n              />\r\n            </div>\r\n          )}\r\n          {(allowedTags || []).length > 0 && (\r\n            <div style={{ marginTop: 4 }}>\r\n              <Select\r\n                onChange={(newTags) =>\r\n                  onChange({\r\n                    ...(region: any),\r\n                    tags: newTags.map((t) => t.value),\r\n                  })\r\n                }\r\n                placeholder=\"Tags\"\r\n                value={(region.tags || []).map((c) => ({ label: c, value: c }))}\r\n                isMulti\r\n                options={asMutable(\r\n                  allowedTags.map((c) => ({ value: c, label: c }))\r\n                )}\r\n              />\r\n            </div>\r\n          )}\r\n          {onClose && (\r\n            <div style={{ marginTop: 4, display: \"flex\" }}>\r\n              <div style={{ flexGrow: 1 }} />\r\n              <Button\r\n                onClick={() => onClose(region)}\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                <CheckIcon />\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default memo(\r\n  RegionLabel,\r\n  (prevProps, nextProps) =>\r\n    prevProps.editing === nextProps.editing &&\r\n    prevProps.region === nextProps.region\r\n)\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/utils/get-landmarks-with-transform.js",["316"],"// @flow\r\nimport type { KeypointDefinition } from \"../ImageCanvas/region-tools\"\r\n\r\ntype Parameters = {\r\n  center: { x: number, y: number },\r\n  scale: number,\r\n  landmarks: {\r\n    [string]: KeypointDefinition,\r\n  },\r\n}\r\n\r\nexport default ({ center, scale, landmarks }: Parameters) => {\r\n  const points = {}\r\n  for (const [keypointId, { defaultPosition }] of (Object.entries(\r\n    landmarks\r\n  ): any)) {\r\n    points[keypointId] = {\r\n      x: defaultPosition[0] * scale + center.x,\r\n      y: defaultPosition[1] * scale + center.y,\r\n    }\r\n  }\r\n  return points\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/icon-dictionary.js",[],["317","318"],"/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/ImageSwitcher/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionShapes/index.js",["319","320"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/hooks/use-window-size.js",["321"],"// @flow\r\n\r\nimport { useEffect } from \"react\"\r\n\r\nimport { useRafState, useInterval } from \"react-use\"\r\n\r\nconst useWindowSize = (initialWidth = Infinity, initialHeight = Infinity) => {\r\n  const isClient = typeof window !== \"undefined\"\r\n  const [state, setState] = useRafState({\r\n    width: isClient ? window.innerWidth : initialWidth,\r\n    height: isClient ? window.innerHeight : initialHeight,\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!isClient) return\r\n    const handler = () => {\r\n      setState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handler)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handler)\r\n    }\r\n  }, [])\r\n\r\n  useInterval(() => {\r\n    if (!isClient) return\r\n    if (\r\n      window.innerWidth !== state.width ||\r\n      window.innerHeight !== state.height\r\n    ) {\r\n      setState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n  }, 100)\r\n\r\n  return state\r\n}\r\n\r\nexport default useWindowSize\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageCanvas/use-mouse.js",["322"],"/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/LeftSidebar/styles.js",["323","324","325","326"],"import { grey, blue, orange, purple } from \"@material-ui/core/colors\"\r\n\r\nexport default {\r\n  container: {\r\n    fontSize: 11,\r\n    fontWeight: \"bold\",\r\n    color: grey[700],\r\n    \"& .icon\": {\r\n      marginTop: 4,\r\n      width: 10,\r\n      height: 10,\r\n      color:'green',\r\n\r\n    },\r\n    \"& .icon2\": {\r\n      opacity: 0.5,\r\n      width: 10,\r\n      color:'green',\r\n      height: 10,\r\n      transition: \"200ms opacity\",\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n        opacity: 1,\r\n      },\r\n    },\r\n  },\r\n  row: {\r\n    // padding: 4,\r\n  \r\n    cursor: \"pointer\",\r\n    \"&.header:hover\": {\r\n      // backgroundColor: blue[50],\r\n    },\r\n    \"&.highlighted\": {\r\n      backgroundColor: \"#5999c9\",\r\n    },\r\n    \"&:hover\": {\r\n      // backgroundColor: blue[50],\r\n      color: grey[800],\r\n    },\r\n  },\r\n  chip: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  \r\n\r\n\r\n    alignItems: \"center\",\r\n    \"& .color\": {\r\n      width: 11,\r\n      height: 11,\r\n      marginRight: 9,\r\n    },\r\n    \"& .text\": {},\r\n  },\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/hooks/xpattern.js",["327"],"/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/LeftSidebar/ObjectSelector.js",["328","329","330","331","332","333","334","335","336","337","338","339","340","341","342"],"import React, { useReducer, useEffect,useState, useMemo,memo } from \"react\"\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\"\r\nimport ExpandIcon from \"@material-ui/icons/KeyboardArrowLeft\"\r\nimport ContractIcon from \"@material-ui/icons/KeyboardArrowRight\"\r\nimport { grey } from \"@material-ui/core/colors\"\r\nimport { makeStyles, styled } from \"@material-ui/core/styles\"\r\nimport RegionIcon from \"@material-ui/icons/PictureInPicture\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport ReorderIcon from \"@material-ui/icons/SwapVert\"\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\"\r\nimport TrashIcon from \"@material-ui/icons/Delete\"\r\nimport LockIcon from \"@material-ui/icons/Lock\"\r\nimport UnlockIcon from \"@material-ui/icons/LockOpen\"\r\nimport VisibleIcon from \"@material-ui/icons/Visibility\"\r\nimport VisibleOffIcon from \"@material-ui/icons/VisibilityOff\"\r\nimport styles from \"./styles\"\r\nimport classnames from \"classnames\"\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst colors = ['red','green','blue','pink','violet','indigo','black']\r\n\r\nconst Chip = ({ color, text }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <span className={classes.chip}>\r\n      <div className=\"color\" style={{ backgroundColor: color }} />\r\n      <div className=\"text\">{text}</div>\r\n    </span>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst RowLayout = ({\r\n  header,\r\n  highlighted,\r\n  order,\r\n  classification,\r\n  area,\r\n  tags,\r\n  trash,\r\n  lock,\r\n  visible,\r\n  onClick,\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  const [mouseOver, changeMouseOver] = useState(false)\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      onMouseEnter={() => changeMouseOver(true)}\r\n      onMouseLeave={() => changeMouseOver(false)}\r\n      className={classnames(classes.row, { header, highlighted })}\r\n    >\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item xs={5}>\r\n          {classification}\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div style={{ textAlign: \"right\", paddingRight: 6 }}>{area}</div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          {trash}\r\n        </Grid>\r\n        <Grid item sm={1}>\r\n          {visible}\r\n        </Grid>\r\n        \r\n        <Grid item xs={1}>\r\n          {lock}\r\n        </Grid>\r\n       \r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst RowHeader = () => {\r\n  return (\r\n    <RowLayout\r\n      header\r\n      highlighted={false}\r\n      order={<ReorderIcon className=\"icon\" />}\r\n      classification={<div style={{ paddingLeft: 10 }}>Label</div>}\r\n      lock={<LockIcon className=\"icon\" />}\r\n      visible={<VisibleIcon className=\"icon\" />}\r\n    />\r\n  )\r\n}\r\n\r\nconst MemoRowHeader = memo(RowHeader)\r\n\r\n\r\n\r\nconst Row = ({\r\n  region: r,\r\n  highlighted,\r\n  onSelectObject,\r\n  onDeleteObject,\r\n  onChangeObject,\r\n  visible,\r\n  selected,\r\n  locked,\r\n  color,\r\n  cls,\r\n  index,\r\n}) => {\r\n  // console.log(\"Region \", r);\r\n  return (\r\n    <RowLayout\r\n      header={true}\r\n      key={Math.random()}\r\n      highlighted={highlighted}\r\n      onClick={() => {\r\n        onSelectObject(r)\r\n      }}\r\n\r\n      classification={<Chip text={r.cls || \"\"} color={r.color || \"#ddd\"} />}\r\n      area=\"\"\r\n      trash={\r\n        (\r\n          <TrashIcon onClick={() => onDeleteObject(r)} className=\"icon2 deleteIocn\" />\r\n        )\r\n      }\r\n      \r\n      lock={\r\n        r.locked ? (\r\n          <LockIcon\r\n            onClick={() => {\r\n              // console.log(\"current Reggionnnn\",r)\r\n              onChangeObject({\r\n                ...r,\r\n                edit:true,\r\n                locked: false\r\n              })\r\n            }\r\n  \r\n            }\r\n            className=\"icon2 lockIcon\"\r\n          />\r\n        ) : (\r\n          <UnlockIcon\r\n              onClick={() => {\r\n              // console.log(\"current Reggionnnn 136 \",r)\r\n\r\n                onChangeObject({ ...r, locked: true })\r\n              }}\r\n            className=\"icon2 UNlockIcon\"\r\n          />\r\n        )\r\n      }\r\n      visible={\r\n        r.visible || r.visible === undefined ? (\r\n          <VisibleIcon\r\n            onClick={() =>\r\n              onChangeObject({\r\n                ...r,\r\n                visible: false,\r\n              })\r\n            }\r\n            className=\"icon2 visibleIocn\"\r\n          />\r\n        ) : (\r\n          <VisibleOffIcon\r\n            onClick={() => onChangeObject({ ...r, visible: true })}\r\n            className=\"icon2 INvisibleIocn\"\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Container = styled(\"div\")({\r\n  width: 300,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  height: '80%',\r\n  padding:'0 20px',\r\n  marginRight:'20px',\r\n  boxShadow: '0 2px 2px 0 rgba(0,0,0,0.2)',\r\n  transition: '0.3s',\r\n  marginTop:'30px',\r\n  \"&.expanded\": {\r\n    width: 300,\r\n  },\r\n})\r\n\r\n\r\nconst InnerSliderContent = styled(\"div\")({\r\n  width: 300,\r\n})\r\n\r\nconst getInitialExpandedState = () => {\r\n  return Boolean(window.__REACT_WORKSPACE_LAYOUT_EXPANDED_STATE)\r\n}\r\n\r\n\r\nconst MemoRow = memo(\r\n  Row,\r\n  (prevProps, nextProps) =>\r\n    prevProps.highlighted === nextProps.highlighted &&\r\n    prevProps.visible === nextProps.visible &&\r\n    prevProps.locked === nextProps.locked &&\r\n    prevProps.id === nextProps.id &&\r\n    prevProps.points.length === nextProps.points.length &&\r\n    prevProps.index === nextProps.index &&\r\n    prevProps.cls === nextProps.cls &&\r\n    prevProps.color === nextProps.color &&\r\n    prevProps.isNew === nextProps.isNew &&\r\n    prevProps.selected === nextProps.selected\r\n\r\n)\r\n\r\n\r\nexport const RightSidebar = ({ state,\r\n  onSelectObject,\r\n  onDeleteObject,\r\n  onChangeObject,\r\n  expandedByDefault,\r\n   initialExpandedState, height }) => {\r\n  const [expanded, toggleExpanded] = useReducer(\r\n    (state) => !state,\r\n    initialExpandedState === undefined\r\n      ? getInitialExpandedState()\r\n      : initialExpandedState\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (initialExpandedState !== undefined) {\r\n      window.__REACT_WORKSPACE_LAYOUT_EXPANDED_STATE = expanded\r\n    }\r\n  }, [initialExpandedState, expanded])\r\n\r\n  const containerStyle = useMemo(() => ({ height: height || \"100%\" }), [height])\r\n\r\n  return (\r\n\r\n            <div className=\"labelRow\">\r\n              <div>\r\n          <h4>Objects</h4>\r\n          {state.images[state.selectedImage].regions.map((r, i) => {\r\n            {/* console.log(\"Region:\", r); */ }\r\n            \r\n            return(\r\n              <Row\r\n                key={r.id}\r\n                {...r}\r\n                region={r}\r\n                index={i}\r\n                onDeleteObject={onDeleteObject}\r\n                onChangeObject={onChangeObject}\r\n                onSelectObject={onSelectObject}\r\n              />\r\n            )\r\n          })}\r\n          </div>\r\n              </div>\r\n  )\r\n}\r\n\r\nexport default RightSidebar\r\n\r\n\r\n\r\n","/Users/shahn/dev/annotator/custom_annotator/src/index.js",[],["343","344"],"/Users/shahn/dev/annotator/custom_annotator/src/components/message.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/components/images.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/index.js",["345","346","347"],"// @flow\n\nimport  React,{ useReducer, useEffect } from \"react\"\nimport type { Node } from \"react\"\nimport MainLayout from \"../MainLayout\"\nimport type {\n  ToolEnum,\n  Image,\n  Mode,\n  MainLayoutState,\n  Action,\n} from \"../MainLayout/types\"\nimport type { KeypointsDefinition } from \"../ImageCanvas/region-tools\"\nimport SettingsProvider from \"../SettingsProvider\"\n\nimport combineReducers from \"./reducers/combine-reducers.js\"\nimport generalReducer from \"./reducers/general-reducer.js\"\nimport imageReducer from \"./reducers/image-reducer.js\"\nimport videoReducer from \"./reducers/video-reducer.js\"\nimport historyHandler from \"./reducers/history-handler.js\"\n\nimport useEventCallback from \"use-event-callback\"\nimport makeImmutable, { without } from \"seamless-immutable\"\n\ntype Props = {\n  taskDescription?: string,\n  allowedArea?: { x: number, y: number, w: number, h: number },\n  regionTagList?: Array<string>,\n  regionClsList?: Array<string>,\n  imageTagList?: Array<string>,\n  imageClsList?: Array<string>,\n  enabledTools?: Array<string>,\n  selectedTool?: String,\n  showTags?: boolean,\n  selectedImage?: string | number,\n  images?: Array<Image>,\n  showPointDistances?: boolean,\n  pointDistancePrecision?: number,\n  RegionEditLabel?: Node,\n  onSubmit: (MainLayoutState) => any,\n  onSave: (Object) => any,\n  videoTime?: number,\n  videoSrc?: string,\n  keyframes?: Object,\n  videoName?: string,\n  keypointDefinitions: KeypointsDefinition,\n  fullImageSegmentationMode?: boolean,\n  autoSegmentationOptions?:\n    | {| type: \"simple\" |}\n    | {| type: \"autoseg\", maxClusters?: number, slicWeightFactor?: number |},\n}\n\nexport const Annotator = ({\n  images,\n  allowedArea,\n  selectedImage = images && images.length > 0 ? 0 : undefined,\n  showPointDistances,\n  pointDistancePrecision,\n  showTags = true,\n  enabledTools = [\n    \"pan\",\n    \"zoom-in\",\n    \"polygon\",\n    \"show-mask\",\n    \"free-hand\"\n  ],\n  renderError,\n  selectedTool = \"pan\",\n  jobName=\"\",\n  regionTagList = [],\n  regionClsList = [],\n  imageTagList = [],\n  imageClsList = [],\n  keyframes = {},\n  taskDescription = \"\",\n  fullImageSegmentationMode = false,\n  RegionEditLabel,\n  videoSrc,\n  videoTime = 0,\n  videoName,\n  onSubmit,\n  onSave,\n  onNextImage,\n  onPrevImage,\n  keypointDefinitions,\n  autoSegmentationOptions = { type: \"autoseg\" },\n}: Props) => {\n  if (typeof selectedImage === \"string\") {\n    selectedImage = (images || []).findIndex((img) => img.src === selectedImage)\n    if (selectedImage === -1) selectedImage = undefined\n  }\n  const annotationType = images ? \"image\" : \"video\"\n  const [state, dispatchToReducer] = useReducer(\n    historyHandler(\n      combineReducers(\n        annotationType === \"image\" ? imageReducer : videoReducer,\n        generalReducer\n      )\n    ),\n    makeImmutable({\n      annotationType,\n      showTags,\n      jobName,\n      allowedArea,\n      showPointDistances,\n      pointDistancePrecision,\n      selectedTool,\n      fullImageSegmentationMode: fullImageSegmentationMode,\n      autoSegmentationOptions,\n      mode: null,\n      taskDescription,\n      showMask: true,\n      labelImages: imageClsList.length > 0 || imageTagList.length > 0,\n      regionClsList,\n      regionTagList,\n      imageClsList,\n\n      imageTagList,\n      currentVideoTime: videoTime,\n      enabledTools,\n      history: [],\n      historyCache:{},\n      videoName,\n      keypointDefinitions,\n      ...(annotationType === \"image\"\n        ? {\n            selectedImage,\n            images,\n            selectedImageFrameTime:\n              images && images.length > 0 ? images[0].frameTime : undefined,\n          }\n        : {\n            videoSrc,\n            keyframes,\n          }),\n    })\n  )\n\n  const dispatch = useEventCallback((action: Action) => {\n    if (action.type === \"FOOTER_BUTTON_CLICKED\") {\n      // console.log('Footer');\n      if (action.buttonName === \"submit\") {\n        return onSubmit(without(state, \"history\"))\n      }\n\n     \n      else if (action.buttonName === \"save\") {\n        \n        const image = state.images[state.selectedImage];\n       \n        console.log(\"Image: \",image)\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = image.dimen && image.dimen.width\n        canvas.height = image.dimen && image.dimen.height\n        console.log(\"Canvas\", canvas.width, canvas.height);\n        var ctx = canvas.getContext(\"2d\");\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        var img = document.createElement(\"img\");\n        img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + image.region_data);\n        \n        img.onload = function () {\n\n          if (image.shouldLabel) {\n            ctx.drawImage(img, 0, 0,canvas.width,canvas.height);\n          } else {\n            \n          }\n          // console.log('ImageData', canvas.toDataURL(\"image/png\"))\n          return onSave(image,canvas.toDataURL(\"image/png\"))\n         };\n      }\n        //   return onNextImage(without(state, \"history\"))\n        // }\n      // else if (action.buttonName === \"Next\" && onNextImage) {\n      //   return onNextImage(without(state, \"history\"))\n      // } else if (action.buttonName === \"Prev\" && onPrevImage) {\n      //   return onPrevImage(without(state, \"history\"))\n      // }\n    }\n    dispatchToReducer(action)\n  })\n\n  const onRegionClassAdded = useEventCallback((cls) => {\n    dispatchToReducer({\n      type: \"ON_CLS_ADDED\",\n      cls: cls,\n    })\n  })\n\n  useEffect(() => {\n    if (selectedImage === undefined) return\n    dispatchToReducer({\n      type: \"SELECT_IMAGE\",\n      imageIndex: selectedImage,\n      image: state.images[selectedImage],\n    })\n  }, [selectedImage])\n\n  if (!images && !videoSrc)\n    return 'Missing required prop \"images\" or \"videoSrc\"'\n\n  return (\n    <SettingsProvider>\n      <MainLayout\n        RegionEditLabel={RegionEditLabel}\n        alwaysShowNextButton={Boolean(onNextImage)}\n        alwaysShowPrevButton={Boolean(onPrevImage)}\n        state={state}\n        renderError={renderError}\n        dispatch={dispatch}\n        onRegionClassAdded={onRegionClassAdded}\n      />\n    </SettingsProvider>\n  )\n}\n\nexport default Annotator\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/MainLayout/index.js",["348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"// @flow\n\nimport React, { useRef, useCallback,useState } from \"react\"\nimport type { Node } from \"react\"\nimport { makeStyles, styled } from \"@material-ui/core/styles\"\nimport ImageCanvas from \"../ImageCanvas\"\nimport styles from \"./styles\"\nimport type { MainLayoutState, Action } from \"./types\"\nimport useKey from \"use-key-hook\"\nimport classnames from \"classnames\"\nimport { useSettings } from \"../SettingsProvider\"\nimport SettingsDialog from \"../SettingsDialog\"\n// import Fullscreen from \"../Fullscreen\"\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport getActiveImage from \"../Annotator/reducers/get-active-image\"\nimport useImpliedVideoRegions from \"./use-implied-video-regions\"\nimport { useDispatchHotkeyHandlers } from \"../ShortcutsManager\"\nimport { withHotKeys } from \"react-hotkeys\"\nimport iconDictionary from \"./icon-dictionary\"\nimport KeyframeTimeline from \"../KeyframeTimeline\"\nimport Workspace from \"../../../Workspace/src/Workspace/index\"\nimport DebugBox from \"../DebugSidebarBox\"\nimport TagsSidebarBox from \"../TagsSidebarBox\"\nimport KeyframesSelector from \"../KeyframesSelectorSidebarBox\"\nimport TaskDescription from \"../TaskDescriptionSidebarBox\"\nimport RegionSelector from \"../RegionSelectorSidebarBox\"\nimport ImageSelector from \"../ImageSelectorSidebarBox\"\nimport HistorySidebarBox from \"../HistorySidebarBox\"\nimport useEventCallback from \"use-event-callback\"\n\nconst emptyArr = []\nconst useStyles = makeStyles(styles)\n\nconst HotkeyDiv = withHotKeys(({ hotKeys, children, divRef, ...props }) => (\n  <div {...{ ...hotKeys, ...props }} ref={divRef}>\n    {children}\n  </div>\n))\n\nconst FullScreenContainer = styled(\"div\")({\n  width: \"100%\",\n  height: \"100%\",\n  \"& .fullscreen\": {\n    width: \"100%\",\n    height: \"100%\",\n  },\n})\n\ntype Props = {\n  state: MainLayoutState,\n  RegionEditLabel?: Node,\n  dispatch: (Action) => any,\n  alwaysShowNextButton?: boolean,\n  alwaysShowPrevButton?: boolean,\n  onRegionClassAdded: () => {},\n}\n\nexport const MainLayout = ({\n  state,\n  dispatch,\n  alwaysShowNextButton = false,\n  alwaysShowPrevButton = false,\n  RegionEditLabel,\n  renderError,\n  onRegionClassAdded,\n}: Props) => {\n  const classes = useStyles()\n  const settings = useSettings()\n  const fullScreenHandle = useFullScreenHandle()\n  const [mouseEvents, setMouseEvents] = useState();\n\n  const memoizedActionFns = useRef({})\n  const action = (type: string, ...params: Array<string>) => {\n    const fnKey = `${type}(${params.join(\",\")})`\n    if (memoizedActionFns.current[fnKey])\n      return memoizedActionFns.current[fnKey]\n\n    const fn = (...args: any) =>\n      params.length > 0\n        ? dispatch(\n            ({\n              type,\n              ...params.reduce((acc, p, i) => ((acc[p] = args[i]), acc), {}),\n            }: any)\n          )\n        : dispatch({ type, ...args[0] })\n    memoizedActionFns.current[fnKey] = fn\n    return fn\n  }\n\n  const { currentImageIndex, activeImage } = getActiveImage(state)\n  let nextImage\n  if (currentImageIndex !== null) {\n    nextImage = state.images[currentImageIndex + 1]\n  }\n  // console.log('ActiveImage: ',activeImage)\n  useKey(() => dispatch({ type: \"CANCEL\" }), {\n    detectKeys: [27],\n  })\n\n\n  const onRegionChange = useEventCallback((regionData,imageDimen) => {\n    // console.log('R: ', r);\n    dispatch({ type: \"CHANGE_REGION_DATA\",payload: {regionData,imageDimen}})\n  })\n\n  const isAVideoFrame = activeImage && activeImage.frameTime !== undefined\n  const innerContainerRef = useRef()\n  const hotkeyHandlers = useDispatchHotkeyHandlers({ dispatch })\n\n  let impliedVideoRegions = useImpliedVideoRegions(state)\n\n  const refocusOnMouseEvent = useCallback((e) => {\n    if (!innerContainerRef.current) return\n    if (innerContainerRef.current.contains(document.activeElement)) return\n    if (innerContainerRef.current.contains(e.target)) {\n      innerContainerRef.current.focus()\n      e.target.focus()\n    }\n  }, [])\n\n  const canvas = (\n    <ImageCanvas\n      {...settings}\n      showCrosshairs={\n        settings.showCrosshairs &&\n        ![\"select\", \"pan\", \"zoom\"].includes(state.selectedTool)\n      }\n      onRegionChange={onRegionChange}\n      key={state.selectedImage}\n      showMask={state.showMask}\n      fullImageSegmentationMode={state.fullImageSegmentationMode}\n      autoSegmentationOptions={state.autoSegmentationOptions}\n      showTags={state.showTags}\n      allowedArea={state.allowedArea}\n      modifyingAllowedArea={state.selectedTool === \"modify-allowed-area\"}\n      regionClsList={state.regionClsList}\n      regionTagList={state.regionTagList}\n      regions={\n        state.annotationType === \"image\"\n          ? activeImage.regions || []\n          : impliedVideoRegions\n      }\n      activeImage={activeImage}\n      realSize={activeImage ? activeImage.realSize : undefined}\n      videoPlaying={state.videoPlaying}\n      onNewImageLoaded={(events) =>setMouseEvents(events)}\n      imageSrc={state.annotationType === \"image\" ? activeImage.src : null}\n      videoSrc={state.annotationType === \"video\" ? state.videoSrc : null}\n      pointDistancePrecision={state.pointDistancePrecision}\n      createWithPrimary={state.selectedTool.includes(\"create\")}\n      dragWithPrimary={state.selectedTool === \"pan\"}\n      zoomWithPrimary={state.selectedTool === \"zoom\"}\n      showPointDistances={state.showPointDistances}\n      videoTime={\n        state.annotationType === \"image\"\n          ? state.selectedImageFrameTime\n          : state.currentVideoTime\n      }\n      selectedTool={state.selectedTool}\n      keypointDefinitions={state.keypointDefinitions}\n      onMouseMove={action(\"MOUSE_MOVE\")}\n      onMouseDown={action(\"MOUSE_DOWN\")}\n      onMouseUp={action(\"MOUSE_UP\")}\n      onChangeRegion={action(\"CHANGE_REGION\", \"region\")}\n      onBeginRegionEdit={action(\"OPEN_REGION_EDITOR\", \"region\")}\n      onCloseRegionEdit={action(\"CLOSE_REGION_EDITOR\", \"region\")}\n      onDeleteRegion={action(\"DELETE_REGION\", \"region\")}\n      onBeginBoxTransform={action(\"BEGIN_BOX_TRANSFORM\", \"box\", \"directions\")}\n      onBeginMovePolygonPoint={action(\n        \"BEGIN_MOVE_POLYGON_POINT\",\n        \"polygon\",\n        \"pointIndex\"\n      )}\n      onBeginMoveKeypoint={action(\n        \"BEGIN_MOVE_KEYPOINT\",\n        \"region\",\n        \"keypointId\"\n      )}\n      onAddPolygonPoint={action(\n        \"ADD_POLYGON_POINT\",\n        \"polygon\",\n        \"point\",\n        \"pointIndex\"\n      )}\n      onSelectRegion={action(\"SELECT_REGION\", \"region\")}\n      onBeginMovePoint={action(\"BEGIN_MOVE_POINT\", \"point\")}\n      onImageLoaded={action(\"IMAGE_LOADED\", \"image\")}\n      RegionEditLabel={RegionEditLabel}\n      onImageOrVideoLoaded={action(\"IMAGE_OR_VIDEO_LOADED\", \"metadata\")}\n      onChangeVideoTime={action(\"CHANGE_VIDEO_TIME\", \"newTime\")}\n      onChangeVideoPlaying={action(\"CHANGE_VIDEO_PLAYING\", \"isPlaying\")}\n      onRegionClassAdded={onRegionClassAdded}\n    />\n  )\n\nconst onClickToolbarItem = useEventCallback((item) => {\n  // console.log('item ', state,item);\n  if (mouseEvents) {\n    if (item.name === 'zoom-in') {\n      mouseEvents.onWheel({deltaY:-0.25},{x:165, y: 237})\n    } else if(item.name === 'zoom-out'){\n      mouseEvents.onWheel({deltaY:0.25},{x:165, y: 237})\n    }\n    else if (item.name === 'polygon') {\n      const image = state.images[currentImageIndex];\n      if (!image.label) {\n        // alert(\"Please select any label\");\n        renderError('Please select any label')\n        return;\n      } \n      console.log(\"Poly\",image);\n    }\n  }\n  \n    dispatch({ type: \"SELECT_TOOL\", selectedTool: item.name })\n  })\n\n\nconst onSelectLabel = useEventCallback((r) => {\n  // console.log('R: ', r);\n  dispatch({ type: \"SELECT_LABEL\", selectedLabel: r })\n})\nconst onChangeObject = useEventCallback((r) => {\n  // console.log('R: ', r);\n  dispatch({ type: \"CHANGE_REGION\", region: r })\n})\n\nconst onSelectObject = useEventCallback((r) => {\n    // console.log('R: ', r);\n    dispatch({ type: \"SELECT_REGION\", region: r })\n})\nconst onDeleteObject = useEventCallback((r) => {\n  // console.log('R: ', r);\n  dispatch({ type: \"DELETE_REGION\", region: r })\n})\nconst onChangeLabel = useEventCallback((l) => {\n  // console.log('R: ', r);\n  dispatch({ type: \"CHANGE_LABEL\", label: l })\n})\n\nconst onClickLabel = useEventCallback(() => {\n  // console.log('R: ', r);\n  dispatch({ type: \"CLICK_LABEL\"})\n})\n\n\nconst onSubmit = useEventCallback(() => {\n  // console.log('R: ', r);\n  dispatch({ type: \"SUBMIT\"})\n})\n\n\n\nconst onClickFooterItem = useEventCallback((item) => {\n    console.log(item);\n    dispatch({ type: \"FOOTER_BUTTON_CLICKED\", buttonName: item.name })\n  })\n\n  const debugModeOn = Boolean(window.localStorage.$ANNOTATE_DEBUG_MODE && state)\n  const nextImageHasRegions =\n    !nextImage || (nextImage.regions && nextImage.regions.length > 0)\n\n  return (\n    <FullScreenContainer>    \n          <Workspace\n            iconDictionary={iconDictionary}\n        activeImage={activeImage}\n        dispatch={dispatch}\n        onSelectLabel={onSelectLabel}\n        onDeleteObject={onDeleteObject}\n                onChangeLabel={onChangeLabel}\n                onChangeObject={onChangeObject}\n        onSelectObject={onSelectObject}\n        onClickLabel={onClickLabel}\n            state={state}\n            footerItems={[\n              { name: \"Prev\" },\n              { name: \"Next\" },\n              { name: \"Undo\" },\n              { name: \"Redo\" },\n              // state.annotationType !== \"video\"\n              //   ? null\n              //   : !state.videoPlaying\n              //   ? { name: \"Play\" }\n              //   : { name: \"Pause\" },\n              // !nextImageHasRegions && activeImage.regions && { name: \"Clone\" },\n              // { name: \"Settings\" },\n              // state.fullScreen ? { name: \"Window\" } : { name: \"Fullscreen\" },\n              // { name: \"Save\" },\n            ].filter(Boolean)}\n        onClickFooterItem={onClickFooterItem}\n        onSubmit={onSubmit}\n        onClickToolbarItem={onClickToolbarItem}\n        onFilterValueUpdate={(filter)=>dispatch({type:'UPDATE_FILTER',payload:filter})}\n            selectedTools={\n              state.selectedTool\n            }\n        toolbarItems={[\n         \n            {\n                name: \"pan\",\n                helperText: \"Drag/Pan\",\n                alwaysShowing: true,\n              },\n              {\n                name: \"zoom-in\",\n                helperText: \"Zoom In\",\n                alwaysShowing: true,\n              },\n              \n              {\n                name: \"zoom-out\",\n                helperText: \"Zoom Out\",\n                alwaysShowing: true,\n              },\n              {\n                name: \"brightness\",\n                helperText: \"Brightness\",\n                alwaysShowing: true,\n              },\n              {\n                name: \"contrast\",\n                helperText: \"Contrast\",\n                alwaysShowing: true,\n             },\n             {\n                name: \"inverse\",\n                helperText: \"Inverse\",\n                alwaysShowing: true,\n              },\n              {\n                name: \"polygon\",\n                helperText: \"Polygon\",\n                alwaysShowing: true,\n              },\n              {\n                name: \"draw\",\n                helperText: \"Free Hand\",\n                alwaysShowing: true,\n              },\n              \n            ]\n              .filter(Boolean)\n              .filter(\n                (a) => a.alwaysShowing || state.enabledTools.includes(a.name)\n              )}\n              imageSelector={[\n             \n          ((state.images && state.images.length) || 0) > 1 && (\n                <ImageSelector\n                key={3}\n                  state={state}\n                  onSelect={(img, position) => {\n                    dispatch({\n                      type: \"UPDATE_IMAGE_CANVAS\",\n                      payload: { img, position },\n                    })\n                  }}\n                  images={state.images}\n                />\n              ),\n              \n            ].filter(Boolean)}\n          >\n            {canvas}\n          </Workspace>\n          <SettingsDialog\n            open={state.settingsOpen}\n            onClose={() =>\n              dispatch({\n                type: \"FOOTER_BUTTON_CLICKED\",\n                buttonName: \"Settings\",\n              })\n            }\n          />\n    </FullScreenContainer>\n  )\n}\n\nexport default MainLayout\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageCanvas/region-tools.js",["367","368"],"// @flow\r\n\r\nexport type BaseRegion = {\r\n  id: string | number,\r\n  cls?: string,\r\n  locked?: boolean,\r\n  visible?: boolean,\r\n  color: string,\r\n  editingLabels?: boolean,\r\n  highlighted?: boolean,\r\n  tags?: Array<string>,\r\n}\r\n\r\nexport type Point = {|\r\n  ...$Exact<BaseRegion>,\r\n  type: \"point\",\r\n  x: number,\r\n  y: number,\r\n|}\r\n\r\nexport type PixelRegion =\r\n  | {|\r\n      ...$Exact<BaseRegion>,\r\n      type: \"pixel\",\r\n      sx: number,\r\n      sy: number,\r\n      w: number,\r\n      h: number,\r\n      src: string,\r\n    |}\r\n  | {|\r\n      ...$Exact<BaseRegion>,\r\n      type: \"pixel\",\r\n      points: Array<[number, number]>,\r\n    |}\r\nexport type Box = {|\r\n  ...$Exact<BaseRegion>,\r\n  type: \"box\",\r\n  x: number,\r\n  y: number,\r\n  w: number,\r\n  h: number,\r\n|}\r\n\r\nexport type Polygon = {|\r\n  ...$Exact<BaseRegion>,\r\n  type: \"polygon\",\r\n  open?: boolean,\r\n  points: Array<[number, number]>,\r\n|}\r\nexport type ExpandingLine = {|\r\n  ...$Exact<BaseRegion>,\r\n  type: \"expanding-line\",\r\n  points: Array<{ x: number, y: number, angle: number, width: number }>,\r\n|}\r\n\r\nexport type KeypointDefinition = {|\r\n  label: string,\r\n  color: string,\r\n  defaultPosition: [number, number],\r\n|}\r\n\r\nexport type KeypointId = string\r\n\r\nexport type KeypointsDefinition = {|\r\n  [id: string]: {\r\n    connections: Array<[KeypointId, KeypointId]>,\r\n    landmarks: {\r\n      [KeypointId]: KeypointDefinition,\r\n    },\r\n  },\r\n|}\r\n\r\nexport type Keypoints = {|\r\n  ...$Exact<BaseRegion>,\r\n  type: \"keypoints\",\r\n  keypointsDefinitionId: string,\r\n  points: {\r\n    [string]: { x: number, y: number },\r\n  },\r\n|}\r\n\r\nexport type Region =\r\n  | Point\r\n  | PixelRegion\r\n  | Box\r\n  | Polygon\r\n  | ExpandingLine\r\n  | Keypoints\r\n\r\nexport const getEnclosingBox = (region: Region) => {\r\n  switch (region.type) {\r\n    case \"polygon\": {\r\n      const box = {\r\n        x: Math.min(...region.points.map(([x, y]) => x)),\r\n        y: Math.min(...region.points.map(([x, y]) => y)),\r\n        w: 0,\r\n        h: 0,\r\n      }\r\n      box.w = Math.max(...region.points.map(([x, y]) => x)) - box.x\r\n      box.h = Math.max(...region.points.map(([x, y]) => y)) - box.y\r\n      return box\r\n    }\r\n    case \"keypoints\": {\r\n      const minX = Math.min(\r\n        ...Object.values(region.points).map(({ x, y }) => x)\r\n      )\r\n      const minY = Math.min(\r\n        ...Object.values(region.points).map(({ x, y }) => y)\r\n      )\r\n      const maxX = Math.max(\r\n        ...Object.values(region.points).map(({ x, y }) => x)\r\n      )\r\n      const maxY = Math.max(\r\n        ...Object.values(region.points).map(({ x, y }) => y)\r\n      )\r\n      return {\r\n        x: minX,\r\n        y: minY,\r\n        w: maxX - minX,\r\n        h: maxY - minY,\r\n      }\r\n    }\r\n    case \"expanding-line\": {\r\n      const box = {\r\n        x: Math.min(...region.points.map(({ x, y }) => x)),\r\n        y: Math.min(...region.points.map(({ x, y }) => y)),\r\n        w: 0,\r\n        h: 0,\r\n      }\r\n      box.w = Math.max(...region.points.map(({ x, y }) => x)) - box.x\r\n      box.h = Math.max(...region.points.map(({ x, y }) => y)) - box.y\r\n      return box\r\n    }\r\n    case \"box\": {\r\n      return { x: region.x, y: region.y, w: region.w, h: region.h }\r\n    }\r\n    case \"point\": {\r\n      return { x: region.x, y: region.y, w: 0, h: 0 }\r\n    }\r\n    default: {\r\n      return { x: 0, y: 0, w: 0, h: 0 }\r\n    }\r\n  }\r\n  throw new Error(\"unknown region\")\r\n}\r\n\r\nexport const moveRegion = (region: Region, x: number, y: number) => {\r\n  switch (region.type) {\r\n    case \"point\": {\r\n      return { ...region, x, y }\r\n    }\r\n    case \"box\": {\r\n      return { ...region, x: x - region.w / 2, y: y - region.h / 2 }\r\n    }\r\n  }\r\n  return region\r\n}\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/TagsSidebarBox/index.js",["369"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionSelectorSidebarBox/index.js",["370","371"],"// @flow\r\n\r\nimport React, { Fragment, useState, memo } from \"react\"\r\nimport SidebarBoxContainer from \"../SidebarBoxContainer\"\r\nimport { makeStyles, styled } from \"@material-ui/core/styles\"\r\nimport { grey } from \"@material-ui/core/colors\"\r\nimport RegionIcon from \"@material-ui/icons/PictureInPicture\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport ReorderIcon from \"@material-ui/icons/SwapVert\"\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\"\r\nimport TrashIcon from \"@material-ui/icons/Delete\"\r\nimport LockIcon from \"@material-ui/icons/Lock\"\r\nimport UnlockIcon from \"@material-ui/icons/LockOpen\"\r\nimport VisibleIcon from \"@material-ui/icons/Visibility\"\r\nimport VisibleOffIcon from \"@material-ui/icons/VisibilityOff\"\r\nimport styles from \"./styles\"\r\nimport classnames from \"classnames\"\r\nimport isEqual from \"lodash/isEqual\"\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst HeaderSep = styled(\"div\")({\r\n  borderTop: `1px solid ${grey[200]}`,\r\n  marginTop: 2,\r\n  marginBottom: 2,\r\n})\r\n\r\nconst Chip = ({ color, text }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <span className={classes.chip}>\r\n      <div className=\"color\" style={{ backgroundColor: color }} />\r\n      <div className=\"text\">{text}</div>\r\n    </span>\r\n  )\r\n}\r\n\r\nconst RowLayout = ({\r\n  header,\r\n  highlighted,\r\n  order,\r\n  classification,\r\n  area,\r\n  tags,\r\n  trash,\r\n  lock,\r\n  visible,\r\n  onClick,\r\n}) => {\r\n  const classes = useStyles()\r\n  const [mouseOver, changeMouseOver] = useState(false)\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      onMouseEnter={() => changeMouseOver(true)}\r\n      onMouseLeave={() => changeMouseOver(false)}\r\n      className={classnames(classes.row, { header, highlighted })}\r\n    >\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item xs={2}>\r\n          <div style={{ textAlign: \"right\", paddingRight: 10 }}>{order}</div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          {classification}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div style={{ textAlign: \"right\", paddingRight: 6 }}>{area}</div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          {trash}\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          {lock}\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          {visible}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst RowHeader = () => {\r\n  return (\r\n    <RowLayout\r\n      header\r\n      highlighted={false}\r\n      order={<ReorderIcon className=\"icon\" />}\r\n      classification={<div style={{ paddingLeft: 10 }}>Class</div>}\r\n      area={<PieChartIcon className=\"icon\" />}\r\n      trash={<TrashIcon className=\"icon\" />}\r\n      lock={<LockIcon className=\"icon\" />}\r\n      visible={<VisibleIcon className=\"icon\" />}\r\n    />\r\n  )\r\n}\r\n\r\nconst MemoRowHeader = memo(RowHeader)\r\n\r\nconst Row = ({\r\n  region: r,\r\n  highlighted,\r\n  onSelectRegion,\r\n  onDeleteRegion,\r\n  onChangeRegion,\r\n  visible,\r\n  locked,\r\n  color,\r\n  cls,\r\n  index,\r\n}) => {\r\n  return (\r\n    <RowLayout\r\n      header={false}\r\n      highlighted={highlighted}\r\n      onClick={() => onSelectRegion(r)}\r\n      order={`#${index + 1}`}\r\n      classification={<Chip text={cls || \"\"} color={color || \"#ddd\"} />}\r\n      area=\"\"\r\n      trash={<TrashIcon onClick={() => onDeleteRegion(r)} className=\"icon2\" />}\r\n      lock={\r\n        r.locked ? (\r\n          <LockIcon\r\n            onClick={() => onChangeRegion({ ...r, locked: false })}\r\n            className=\"icon2\"\r\n          />\r\n        ) : (\r\n          <UnlockIcon\r\n            onClick={() => onChangeRegion({ ...r, locked: true })}\r\n            className=\"icon2\"\r\n          />\r\n        )\r\n      }\r\n      visible={\r\n        r.visible || r.visible === undefined ? (\r\n          <VisibleIcon\r\n            onClick={() => onChangeRegion({ ...r, visible: false })}\r\n            className=\"icon2\"\r\n          />\r\n        ) : (\r\n          <VisibleOffIcon\r\n            onClick={() => onChangeRegion({ ...r, visible: true })}\r\n            className=\"icon2\"\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nconst MemoRow = memo(\r\n  Row,\r\n  (prevProps, nextProps) =>\r\n    prevProps.highlighted === nextProps.highlighted &&\r\n    prevProps.visible === nextProps.visible &&\r\n    prevProps.locked === nextProps.locked &&\r\n    prevProps.id === nextProps.id &&\r\n    prevProps.index === nextProps.index &&\r\n    prevProps.cls === nextProps.cls &&\r\n    prevProps.color === nextProps.color\r\n)\r\n\r\nconst emptyArr = []\r\n\r\nexport const RegionSelectorSidebarBox = ({\r\n  regions = emptyArr,\r\n  onDeleteRegion,\r\n  onChangeRegion,\r\n  onSelectRegion,\r\n}) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <SidebarBoxContainer\r\n      title=\"Regions\"\r\n      subTitle=\"\"\r\n      icon={<RegionIcon style={{ color: grey[700] }} />}\r\n      expandedByDefault\r\n    >\r\n      <div className={classes.container}>\r\n        <MemoRowHeader />\r\n        <HeaderSep />\r\n        {regions.map((r, i) => (\r\n          <MemoRow\r\n            key={r.id}\r\n            {...r}\r\n            region={r}\r\n            index={i}\r\n            onSelectRegion={onSelectRegion}\r\n            onDeleteRegion={onDeleteRegion}\r\n            onChangeRegion={onChangeRegion}\r\n          />\r\n        ))}\r\n      </div>\r\n    </SidebarBoxContainer>\r\n  )\r\n}\r\n\r\nconst mapUsedRegionProperties = (r) => [\r\n  r.id,\r\n  r.color,\r\n  r.locked,\r\n  r.visible,\r\n  r.highlighted,\r\n]\r\n\r\nexport default memo(RegionSelectorSidebarBox, (prevProps, nextProps) =>\r\n  isEqual(\r\n    (prevProps.regions || emptyArr).map(mapUsedRegionProperties),\r\n    (nextProps.regions || emptyArr).map(mapUsedRegionProperties)\r\n  )\r\n)\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/hooks/use-exclude-pattern.js",["372"],"/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/WorkContainer/index.js",["373"],"/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/Toolbar/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Crosshairs/index.js",["374"],"// @flow\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\"\r\n\r\nexport const Crosshairs = ({\r\n  mousePosition,\r\n  x,\r\n  y,\r\n}: {\r\n  mousePosition: { current: { x: number, y: number } },\r\n  x?: number,\r\n  y?: number,\r\n}) => {\r\n  const [forceRenderState, changeForceRenderState] = useState()\r\n\r\n  if (mousePosition) {\r\n    x = mousePosition.current.x\r\n    y = mousePosition.current.y\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!mousePosition) return\r\n    const interval = setInterval(() => {\r\n      if (x !== mousePosition.current.x || y !== mousePosition.current.y) {\r\n        changeForceRenderState([\r\n          mousePosition.current.x,\r\n          mousePosition.current.y,\r\n        ])\r\n      }\r\n    }, 10)\r\n    return () => clearInterval(interval)\r\n  })\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          height: \"100%\",\r\n          width: 1,\r\n          zIndex: 10,\r\n          backgroundColor: \"#f00\",\r\n          left: x,\r\n          pointerEvents: \"none\",\r\n          top: 0,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          zIndex: 10,\r\n          height: 1,\r\n          backgroundColor: \"#f00\",\r\n          top: y,\r\n          pointerEvents: \"none\",\r\n          left: 0,\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Crosshairs\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/PointDistances/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageMask/index.js",["375","376","377"],"// @flow\r\n\r\nimport React, { useState, useEffect, useMemo, useRef } from \"react\"\r\nimport { colorInts } from \"../colors\"\r\nimport { useDebounce } from \"react-use\"\r\nimport loadImage from \"./load-image\"\r\nimport autoseg from \"autoseg/webworker\"\r\n\r\nfunction convertToUDTRegions(regions) {\r\n  return regions\r\n    .map((r) => {\r\n      switch (r.type) {\r\n        case \"point\": {\r\n          return {\r\n            regionType: \"point\",\r\n            classification: r.cls,\r\n            x: r.x,\r\n            y: r.y,\r\n          }\r\n        }\r\n        case \"polygon\": {\r\n          return {\r\n            regionType: \"polygon\",\r\n            classification: r.cls,\r\n            points: r.points.map(([x, y]) => ({ x, y })),\r\n          }\r\n        }\r\n        case \"box\": {\r\n          return {\r\n            regionType: \"bounding-box\",\r\n            classification: r.cls,\r\n            centerX: r.x + r.w / 2,\r\n            centerY: r.y + r.h / 2,\r\n            width: r.w,\r\n            height: r.h,\r\n          }\r\n        }\r\n        default: {\r\n          return null\r\n        }\r\n      }\r\n    })\r\n    .filter(Boolean)\r\n}\r\n\r\nexport const ImageMask = ({\r\n  regions,\r\n  regionClsList,\r\n  imageSrc,\r\n  imagePosition,\r\n  zIndex = 1,\r\n  hide = false,\r\n  autoSegmentationOptions = { type: \"simple\" },\r\n}) => {\r\n  // if (!window.mmgc) window.mmgc = MMGC_INIT()\r\n  // const mmgc = window.mmgc\r\n  const [canvasRef, setCanvasRef] = useState(null)\r\n\r\n  const [sampleImageData, setSampleImageData] = useState()\r\n\r\n  useEffect(() => {\r\n    if (!imageSrc) return\r\n\r\n    loadImage(imageSrc).then((imageData) => {\r\n      autoseg.setConfig({\r\n        classNames: regionClsList,\r\n        ...autoSegmentationOptions,\r\n      })\r\n      autoseg.loadImage(imageData)\r\n      setSampleImageData(imageData)\r\n    })\r\n  }, [imageSrc])\r\n\r\n  useDebounce(\r\n    () => {\r\n      if (hide) return\r\n      if (!canvasRef) return\r\n      if (!sampleImageData) return\r\n      if (regions.filter((cp) => cp.cls).length < 2) return\r\n\r\n      const udtRegions = convertToUDTRegions(regions)\r\n\r\n      autoseg.getMask(udtRegions).then((maskImageData) => {\r\n        const context = canvasRef.getContext(\"2d\")\r\n        context.clearRect(0, 0, maskImageData.width, maskImageData.height)\r\n        context.putImageData(maskImageData, 0, 0)\r\n      })\r\n    },\r\n    1000,\r\n    [canvasRef, sampleImageData, regions, hide]\r\n  )\r\n\r\n  const style = useMemo(() => {\r\n    let width = imagePosition.bottomRight.x - imagePosition.topLeft.x\r\n    let height = imagePosition.bottomRight.y - imagePosition.topLeft.y\r\n    return {\r\n      display: hide ? \"none\" : undefined,\r\n      imageRendering: \"pixelated\",\r\n      transform: \"translateZ(0px)\",\r\n      left: imagePosition.topLeft.x,\r\n      top: imagePosition.topLeft.y,\r\n      width: isNaN(width) ? 0 : width,\r\n      height: isNaN(height) ? 0 : height,\r\n      zIndex,\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n    }\r\n  }, [\r\n    imagePosition.topLeft.x,\r\n    imagePosition.topLeft.y,\r\n    imagePosition.bottomRight.x,\r\n    imagePosition.bottomRight.y,\r\n    zIndex,\r\n    hide,\r\n  ])\r\n\r\n  return (\r\n    <canvas\r\n      style={style}\r\n      width={sampleImageData ? sampleImageData.width : 0}\r\n      height={sampleImageData ? sampleImageData.height : 0}\r\n      ref={setCanvasRef}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ImageMask\r\n","/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/icon-mapping.js",["378"],"import React from 'react';\r\nimport BackIcon from \"@material-ui/icons/KeyboardArrowLeft\"\r\nimport NextIcon from \"@material-ui/icons/KeyboardArrowRight\"\r\nimport UndoIcon from \"@material-ui/icons/Undo\"\r\nimport RedoIcon from \"@material-ui/icons/Redo\"\r\nimport PlayIcon from \"@material-ui/icons/PlayArrow\"\r\nimport PauseIcon from \"@material-ui/icons/Pause\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\nimport HelpIcon from \"@material-ui/icons/Help\"\r\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\"\r\nimport ExitIcon from \"@material-ui/icons/ExitToApp\"\r\nimport QueuePlayNextIcon from \"@material-ui/icons/QueuePlayNext\"\r\nimport HotkeysIcon from \"@material-ui/icons/Keyboard\"\r\n\r\n\r\n\r\nimport { ReactComponent as Pan } from './icons/Pan.svg';\r\nimport { ReactComponent as ZoomIn } from './icons/Zoom_In.svg';\r\nimport { ReactComponent as ZoomOut } from './icons/Zoom_Out.svg';\r\nimport { ReactComponent as Invert } from './icons/Invert.svg';\r\nimport { ReactComponent as Polygon } from './icons/Polygon.svg';\r\nimport { ReactComponent as Draw } from './icons/Draw.svg';\r\nimport { ReactComponent as Brightness } from './icons/Brightness.svg';\r\nimport { ReactComponent as Contrast } from './icons/Contrast.svg';\r\nimport { ReactComponent as Next } from './icons/Next.svg';\r\nimport { ReactComponent as Previous } from './icons/Previous.svg';\r\nimport { ReactComponent as Redo } from './icons/Redo.svg';\r\nimport { ReactComponent as Undo } from './icons/Undo.svg';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const iconMapping = {\r\n  back: BackIcon,\r\n  prev: BackIcon,\r\n  undo: UndoIcon,\r\n  redo: RedoIcon,\r\n  previous: BackIcon,\r\n  next: NextIcon,\r\n  forward: NextIcon,\r\n  play: PlayIcon,\r\n  pause: PauseIcon,\r\n  settings: SettingsIcon,\r\n  options: SettingsIcon,\r\n  help: HelpIcon,\r\n  fullscreen: FullscreenIcon,\r\n  exit: ExitIcon,\r\n  quit: ExitIcon,\r\n  save: ExitIcon,\r\n  done: ExitIcon,\r\n  clone: QueuePlayNextIcon,\r\n  hotkeys: HotkeysIcon,\r\n  shortcuts: HotkeysIcon,\r\n  pan: Pan,\r\n  'zoom-in': ZoomIn,\r\n  'zoom-out': ZoomOut,\r\n  inverse: Invert,\r\n  polygon: Polygon,\r\n  draw: Draw,\r\n  brightness: Brightness,\r\n  contrast: Contrast,\r\n}\r\n\r\nexport default iconMapping\r\n\r\n\r\nexport const getIcon = (name, selected) => {\r\n  switch (name) {\r\n    case 'brightness':\r\n      return <Brightness\r\n        className={selected ? 'selected' : ''}\r\n        alt=\"close bubble\"\r\n      />;\r\n    case 'pan':\r\n      return <Pan\r\n        className={selected ? 'selected' : ''}\r\n      />;\r\n    case 'zoom-in':\r\n      return <ZoomIn\r\n        className={selected ? 'selected' : ''}\r\n      />;\r\n    case 'zoom-out':\r\n      return <ZoomOut\r\n        className={selected ? 'selected' : ''}\r\n      />\r\n    case 'contrast':\r\n      return <Contrast\r\n        className={selected ? 'selected' : ''}\r\n      />;\r\n    case 'inverse':\r\n      return <Invert\r\n        className={selected ? 'selected' : ''}\r\n      />;\r\n    case 'draw':\r\n      return <Draw\r\n        className={selected ? 'selected' : ''}\r\n      />;\r\n    case 'polygon':\r\n      return <Polygon\r\n        className={selected ? 'selected' : ''}\r\n      />;\r\n    case 'Undo':\r\n      return <Undo\r\n        className={selected ? 'selected' : ''} />;\r\n\r\n    case 'Redo':\r\n      return <Redo\r\n        className={selected ? 'selected' : ''} />;\r\n\r\n    case 'Prev':\r\n      return <Previous\r\n        className={selected ? 'selected' : ''} />;\r\n\r\n\r\n    case 'Next':\r\n      return <Next\r\n        className={selected ? 'selected' : ''}\r\n      />;\r\n  }\r\n}","/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionLabel/styles.js",["379"],"/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/FooterButton/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/HighlightBox/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/Footer/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Workspace/src/LeftSidebar/LabelSelector.js",["380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/general-reducer.js",["394","395","396","397","398","399","400","401","402","403","404","405","406","407","408"],"// @flow\nimport type { MainLayoutState, Action } from \"../../MainLayout/types\"\nimport { moveRegion } from \"../../ImageCanvas/region-tools.js\"\nimport Immutable,{ getIn, setIn, updateIn } from \"seamless-immutable\"\nimport moment from \"moment\"\nimport isEqual from \"lodash/isEqual\"\nimport getActiveImage from \"./get-active-image\"\nimport { saveToHistory } from \"./history-handler.js\"\nimport colors from \"../../colors\"\nimport fixTwisted from \"./fix-twisted\"\nimport convertExpandingLineToPolygon from \"./convert-expanding-line-to-polygon\"\nimport clamp from \"clamp\"\n\nimport getLandmarksWithTransform from \"../../utils/get-landmarks-with-transform\"\n\nconst getRandomId = () => Math.random().toString().split(\".\")[1]\n\nconst generalReducer = (state, action) => {\n  if (\n    state.allowedArea &&\n    state.selectedTool !== \"modify-allowed-area\" &&\n    [\"MOUSE_DOWN\", \"MOUSE_UP\", \"MOUSE_MOVE\"].includes(action.type)\n  ) {\n    const aa = state.allowedArea\n    action.x = clamp(action.x, aa.x, aa.x + aa.w)\n    action.y = clamp(action.y, aa.y, aa.y + aa.h)\n  }\n\n  if (action.type === \"ON_CLS_ADDED\" && action.cls && action.cls !== \"\") {\n    const oldRegionClsList = state.regionClsList\n    const newState = {\n      ...state,\n      regionClsList: oldRegionClsList.concat(action.cls),\n    }\n    return newState\n  }\n\n  // Throttle certain actions\n  if (action.type === \"MOUSE_MOVE\") {\n    if (Date.now() - ((state: any).lastMouseMoveCall || 0) < 16) return state\n    state = setIn(state, [\"lastMouseMoveCall\"], Date.now())\n  }\n  if (!action.type.includes(\"MOUSE\")) {\n    state = setIn(state, [\"lastAction\"], action)\n  }\n\n  const { currentImageIndex, pathToActiveImage, activeImage } = getActiveImage(\n    state\n  )\n\n  const getRegionIndex = (region) => {\n    const regionId =\n      typeof region === \"string\" || typeof region === \"number\"\n        ? region\n        : region.id\n    if (!activeImage) return null\n    const regionIndex = (activeImage.regions || []).findIndex(\n      (r) => r.id === regionId\n    )\n    return regionIndex === -1 ? null : regionIndex\n  }\n  const getRegion = (regionId) => {\n    if (!activeImage) return null\n    const regionIndex = getRegionIndex(regionId)\n    if (regionIndex === null) return [null, null]\n    const region = activeImage.regions[regionIndex]\n    return [region, regionIndex]\n  }\n  const modifyRegion = (regionId, obj) => {\n    const [region, regionIndex] = getRegion(regionId)\n    if (!region) return state\n    if (obj !== null) {\n      return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\n        ...region,\n        ...obj,\n      })\n    } else {\n      // delete region\n      const regions = activeImage.regions\n      return setIn(\n        state,\n        [...pathToActiveImage, \"regions\"],\n        (regions || []).filter((r) => r.id !== region.id)\n      )\n    }\n  }\n  const unselectRegions = (state: MainLayoutState) => {\n    if (!activeImage) return state\n    return setIn(\n      state,\n      [...pathToActiveImage, \"regions\"],\n      (activeImage.regions || []).map((r) => ({\n        ...r,\n        highlighted: false,\n      }))\n    )\n  }\n\n  const closeEditors = (state: MainLayoutState) => {\n    if (currentImageIndex === null) return state\n    return setIn(\n      state,\n      [...pathToActiveImage, \"regions\"],\n      (activeImage.regions || []).map((r) => ({\n        ...r,\n        editingLabels: false,\n      }))\n    )\n  }\n\n  const setNewImage = (img: string | Object, index: number) => {\n    let { src, frameTime } = typeof img === \"object\" ? img : { src: img }\n    return setIn(\n      setIn(state, [\"selectedImage\"], index),\n      [\"selectedImageFrameTime\"],\n      frameTime\n    )\n  }\n\n  switch (action.type) {\n    case \"@@INIT\": {\n      return setIn(state, ['initState'], state);\n    }\n    case \"SELECT_IMAGE\": {\n      return setNewImage(action.image, action.imageIndex)\n    }\n    \n    case 'SELECT_LABEL': {\n      // console.log(\"State: \", state);\n      const selectedLabel = action.selectedLabel;\n      // console.log(selectedLabel);\n      return setIn(\n        state,\n        ['images', state.selectedImage, 'label'],selectedLabel\n      )\n    }\n\n    case \"CHANGE_REGION\": {\n      // console.log(\"ActionRegion:\", action.region);\n      const regionIndex = getRegionIndex(action.region)\n      if (regionIndex === null) return state\n      const oldRegion = activeImage.regions[regionIndex]\n      // console.log('OldRegion,', oldRegion);\n      // console.log('NewRegion,', action.region);\n      if (oldRegion.cls !== action.region.cls) {\n        state = saveToHistory(state, \"Change Region Classification\")\n        const clsIndex = state.regionClsList.indexOf(action.region.cls)\n        if (clsIndex !== -1) {\n          action.region.color = colors[clsIndex % colors.length]\n        }\n      }\n      if (!isEqual(oldRegion.tags, action.region.tags)) {\n        state = saveToHistory(state, \"Change Region Tags\")\n      }\n      return setIn(\n        state,\n        [...pathToActiveImage, \"regions\", regionIndex],\n        action.region\n      )\n    }\n\n    case 'SUBMIT': {\n\n      const regionData = getIn(state, [...pathToActiveImage, \"region_data\"])\n      console.log(\"Data: \", regionData);\n\n      return state;\n    }\n    \n\n    case 'CHANGE_REGION_DATA': {\n      const { regionData, imageDimen } = action.payload;\n     state = setIn(state, [...pathToActiveImage, \"dimen\"], imageDimen)\n       return setIn(state, [...pathToActiveImage, \"region_data\"], regionData)\n      }\n    case \"CHANGE_LABEL\": {\n      const label = action.label;\n      if (!label || activeImage.regions.length === 0) {\n        return state;\n      }\n      \n\n      // Check if image has regions associated to this label\n      const hasRegions = [...(activeImage.regions || [])].find((r) => r.cls === label.cls);\n      if (!hasRegions) {\n        return state;\n      }\n      \n\n      const regions = [...(activeImage.regions || [])].map((r) => {\n        if (r.cls === label.cls) {\n          return ({\n            ...r,\n            visible: label.visible,\n            locked: label.locked\n          })\n        }\n        return r;\n      })\n\n     state = setIn(state, ['regionClsList'], state.regionClsList.map(regionLabel => {\n        if (regionLabel.cls === label.cls) {\n          return ({\n            ...regionLabel,\n            visible: label.visible,\n            locked: label.locked\n\n          })\n        }\n       return regionLabel;\n      }));\n\n\n      return setIn(state, [...pathToActiveImage, \"regions\"], regions)\n\n    }\n    case \"CHANGE_IMAGE\": {\n      if (!activeImage) return state\n      const { delta } = action\n      for (const key of Object.keys(delta)) {\n        if (key === \"cls\") saveToHistory(state, \"Change Image Class\")\n        if (key === \"tags\") saveToHistory(state, \"Change Image Tags\")\n        state = setIn(state, [...pathToActiveImage, key], delta[key])\n      }\n      return state\n    }\n    case \"SELECT_REGION\": {\n      const { region } = action\n      const regionIndex = getRegionIndex(action.region)\n      if (regionIndex === null) return state\n      const regions = [...(activeImage.regions || [])].map((r) => ({\n        ...r,\n        highlighted: r.id === region.id,\n        editingLabels: r.id === region.id,\n      }))\n      return setIn(state, [...pathToActiveImage, \"regions\"], regions)\n    }\n    case \"BEGIN_MOVE_POINT\": {\n      state = closeEditors(state)\n      return setIn(state, [\"mode\"], {\n        mode: \"MOVE_REGION\",\n        regionId: action.point.id,\n      })\n    }\n    case \"BEGIN_BOX_TRANSFORM\": {\n      const { box, directions } = action\n      state = closeEditors(state)\n      if (directions[0] === 0 && directions[1] === 0) {\n        return setIn(state, [\"mode\"], { mode: \"MOVE_REGION\", regionId: box.id })\n      } else {\n        return setIn(state, [\"mode\"], {\n          mode: \"RESIZE_BOX\",\n          regionId: box.id,\n          freedom: directions,\n          original: { x: box.x, y: box.y, w: box.w, h: box.h },\n        })\n      }\n    }\n    case \"BEGIN_MOVE_POLYGON_POINT\": {\n\n      const { polygon, pointIndex } = action\n      // console.log('Pindex: ', polygon);\n\n      state = closeEditors(state)\n      if (\n        state.mode &&\n        state.mode.mode === \"DRAW_POLYGON\" &&\n        pointIndex === 0\n      ) {\n        return setIn(\n          modifyRegion(polygon, {\n            points: polygon.points.slice(0, -1),\n            open: false,\n          }),\n          [\"mode\"],\n          null\n        )\n      }\n      // else {\n      //   state = saveToHistory(state, \"Move Polygon Point\")\n      // }\n      return setIn(state, [\"mode\"], {\n        mode: \"MOVE_POLYGON_POINT\",\n        regionId: polygon.id,\n        pointIndex,\n      })\n    }\n    case \"BEGIN_MOVE_KEYPOINT\": {\n      const { region, keypointId } = action\n      state = closeEditors(state)\n      state = saveToHistory(state, \"Move Keypoint\")\n      return setIn(state, [\"mode\"], {\n        mode: \"MOVE_KEYPOINT\",\n        regionId: region.id,\n        keypointId,\n      })\n    }\n    case \"ADD_POLYGON_POINT\": {\n      const { polygon, point, pointIndex } = action\n      const regionIndex = getRegionIndex(polygon)\n      // console.log(\"regionIndex\", regionIndex);\n      if (regionIndex === null) return state\n      const points = [...polygon.points]\n      points.splice(pointIndex, 0, point)\n      return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\n        ...polygon,\n        points,\n      })\n    }\n    case \"MOUSE_MOVE\": {\n      const { x, y } = action\n\n      if (!state.mode) return state\n      if (!activeImage) return state\n      const { mouseDownAt } = state\n      switch (state.mode.mode) {\n        case \"MOVE_POLYGON_POINT\": {\n          const { pointIndex, regionId } = state.mode\n          const regionIndex = getRegionIndex(regionId)\n          if (regionIndex === null) return state\n          return setIn(\n            state,\n            [\n              ...pathToActiveImage,\n              \"regions\",\n              regionIndex,\n              \"points\",\n              pointIndex,\n            ],\n            [x, y]\n          )\n        }\n        case \"MOVE_KEYPOINT\": {\n          const { keypointId, regionId } = state.mode\n          const [region, regionIndex] = getRegion(regionId)\n          if (regionIndex === null) return state\n          return setIn(\n            state,\n            [\n              ...pathToActiveImage,\n              \"regions\",\n              regionIndex,\n              \"points\",\n              keypointId,\n            ],\n            { ...(region: any).points[keypointId], x, y }\n          )\n        }\n        case \"MOVE_REGION\": {\n          const { regionId } = state.mode\n          if (regionId === \"$$allowed_area\") {\n            const {\n              allowedArea: { w, h },\n            } = state\n            return setIn(state, [\"allowedArea\"], {\n              x: x - w / 2,\n              y: y - h / 2,\n              w,\n              h,\n            })\n          }\n          const regionIndex = getRegionIndex(regionId)\n          if (regionIndex === null) return state\n          return setIn(\n            state,\n            [...pathToActiveImage, \"regions\", regionIndex],\n            moveRegion(activeImage.regions[regionIndex], x, y)\n          )\n        }\n        case \"RESIZE_BOX\": {\n          const {\n            regionId,\n            freedom: [xFree, yFree],\n            original: { x: ox, y: oy, w: ow, h: oh },\n          } = state.mode\n\n          const dx = xFree === 0 ? ox : xFree === -1 ? Math.min(ox + ow, x) : ox\n          const dw =\n            xFree === 0\n              ? ow\n              : xFree === -1\n              ? ow + (ox - dx)\n              : Math.max(0, ow + (x - ox - ow))\n          const dy = yFree === 0 ? oy : yFree === -1 ? Math.min(oy + oh, y) : oy\n          const dh =\n            yFree === 0\n              ? oh\n              : yFree === -1\n              ? oh + (oy - dy)\n              : Math.max(0, oh + (y - oy - oh))\n\n          // determine if we should switch the freedom\n          if (dw <= 0.001) {\n            state = setIn(state, [\"mode\", \"freedom\"], [xFree * -1, yFree])\n          }\n          if (dh <= 0.001) {\n            state = setIn(state, [\"mode\", \"freedom\"], [xFree, yFree * -1])\n          }\n\n          if (regionId === \"$$allowed_area\") {\n            return setIn(state, [\"allowedArea\"], {\n              x: dx,\n              w: dw,\n              y: dy,\n              h: dh,\n            })\n          }\n\n          const regionIndex = getRegionIndex(regionId)\n          if (regionIndex === null) return state\n          const box = activeImage.regions[regionIndex]\n\n          return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\n            ...box,\n            x: dx,\n            w: dw,\n            y: dy,\n            h: dh,\n          })\n        }\n        case \"RESIZE_KEYPOINTS\": {\n          const { regionId, landmarks, centerX, centerY } = state.mode\n          const distFromCenter = Math.sqrt(\n            (centerX - x) ** 2 + (centerY - y) ** 2\n          )\n          const scale = distFromCenter / 0.15\n          return modifyRegion(regionId, {\n            points: getLandmarksWithTransform({\n              landmarks,\n              center: { x: centerX, y: centerY },\n              scale,\n            }),\n          })\n        }\n        case \"DRAW_POLYGON\": {\n          // console.log('Draw pol')\n          const { regionId } = state.mode\n          const [region, regionIndex] = getRegion(regionId)\n          if (!region) return setIn(state, [\"mode\"], null)\n          return setIn(\n            state,\n            [\n              ...pathToActiveImage,\n              \"regions\",\n              regionIndex,\n              \"points\",\n              (region: any).points.length - 1,\n            ],\n            [x, y]\n          )\n        }\n        case \"DRAW_EXPANDING_LINE\": {\n          const { regionId } = state.mode\n          const [expandingLine, regionIndex] = getRegion(regionId)\n          if (!expandingLine) return state\n          const isMouseDown = Boolean(state.mouseDownAt)\n          if (isMouseDown) {\n            // If the mouse is down, set width/angle\n            const lastPoint = expandingLine.points.slice(-1)[0]\n            const mouseDistFromLastPoint = Math.sqrt(\n              (lastPoint.x - x) ** 2 + (lastPoint.y - y) ** 2\n            )\n            if (mouseDistFromLastPoint < 0.002 && !lastPoint.width) return state\n\n            const newState = setIn(\n              state,\n              [...pathToActiveImage, \"regions\", regionIndex, \"points\"],\n              expandingLine.points.slice(0, -1).concat([\n                {\n                  ...lastPoint,\n                  width: mouseDistFromLastPoint * 2,\n                  angle: Math.atan2(lastPoint.x - x, lastPoint.y - y),\n                },\n              ])\n            )\n            return newState\n          } else {\n            // If mouse is up, move the next candidate point\n            return setIn(\n              state,\n              [...pathToActiveImage, \"regions\", regionIndex],\n              {\n                ...expandingLine,\n                candidatePoint: { x, y },\n              }\n            )\n          }\n\n          return state\n        }\n        case \"SET_EXPANDING_LINE_WIDTH\": {\n          const { regionId } = state.mode\n          const [expandingLine, regionIndex] = getRegion(regionId)\n          if (!expandingLine) return state\n          const lastPoint = expandingLine.points.slice(-1)[0]\n          const { mouseDownAt } = state\n          return setIn(\n            state,\n            [...pathToActiveImage, \"regions\", regionIndex, \"expandingWidth\"],\n            Math.sqrt((lastPoint.x - x) ** 2 + (lastPoint.y - y) ** 2)\n          )\n        }\n        default:\n          return state\n      }\n    }\n    case \"MOUSE_DOWN\": {\n      if (!activeImage) return state\n      const { x, y } = action\n\n\n      state = setIn(state, [\"mouseDownAt\"], { x, y })\n      \n      if (state.mode) {\n        switch (state.mode.mode) {\n          case \"DRAW_POLYGON\": {\n            const [polygon, regionIndex] = getRegion(state.mode.regionId)\n            if (!polygon) break\n            return setIn(\n              state,\n              [...pathToActiveImage, \"regions\", regionIndex],\n              { ...polygon, points: polygon.points.concat([[x, y]]) }\n            )\n          }\n          case \"DRAW_EXPANDING_LINE\": {\n            const [expandingLine, regionIndex] = getRegion(state.mode.regionId)\n            if (!expandingLine) break\n            const lastPoint = expandingLine.points.slice(-1)[0]\n            if (\n              expandingLine.points.length > 1 &&\n              Math.sqrt((lastPoint.x - x) ** 2 + (lastPoint.y - y) ** 2) < 0.002\n            ) {\n              if (!lastPoint.width) {\n                return setIn(state, [\"mode\"], {\n                  mode: \"SET_EXPANDING_LINE_WIDTH\",\n                  regionId: state.mode.regionId,\n                })\n              } else {\n                return state\n                  .setIn(\n                    [...pathToActiveImage, \"regions\", regionIndex],\n                    convertExpandingLineToPolygon(expandingLine)\n                  )\n                  .setIn([\"mode\"], null)\n              }\n            }\n\n            // Create new point\n            return setIn(\n              state,\n              [...pathToActiveImage, \"regions\", regionIndex, \"points\"],\n              expandingLine.points.concat([{ x, y, angle: null, width: null }])\n            )\n          }\n          case \"SET_EXPANDING_LINE_WIDTH\": {\n            const [expandingLine, regionIndex] = getRegion(state.mode.regionId)\n            if (!expandingLine) break\n            const { expandingWidth } = expandingLine\n            return state\n              .setIn(\n                [...pathToActiveImage, \"regions\", regionIndex],\n                convertExpandingLineToPolygon({\n                  ...expandingLine,\n                  points: expandingLine.points.map((p) =>\n                    p.width ? p : { ...p, width: expandingWidth }\n                  ),\n                  expandingWidth: undefined,\n                })\n              )\n              .setIn([\"mode\"], null)\n          }\n          default:\n            break\n        }\n      }\n\n      let newRegion\n      if (!activeImage.label) {\n        return state;\n      }\n      let defaultRegionCls = activeImage.label.cls,\n        defaultRegionColor = activeImage.label.color\n      // if (activeImage && (activeImage.regions || []).length > 0) {\n      //   defaultRegionCls = activeImage.regions.slice(-1)[0].cls\n      //   const clsIndex = (state.regionClsList || []).indexOf(defaultRegionCls)\n      //   if (clsIndex !== -1) {\n      //     defaultRegionColor = colors[clsIndex % colors.length]\n      //   }\n      // }\n\n      switch (state.selectedTool) {\n        case \"create-point\": {\n          state = saveToHistory(state, \"Create Point\")\n          newRegion = {\n            type: \"point\",\n            x,\n            y,\n            highlighted: true,\n            editingLabels: true,\n            color: defaultRegionColor,\n            id: getRandomId(),\n            cls: defaultRegionCls,\n          }\n          break\n        }\n        case \"create-box\": {\n          state = saveToHistory(state, \"Create Box\")\n          newRegion = {\n            type: \"box\",\n            x: x,\n            y: y,\n            w: 0,\n            h: 0,\n            highlighted: true,\n            editingLabels: false,\n            color: defaultRegionColor,\n            cls: defaultRegionCls,\n            id: getRandomId(),\n          }\n          state = setIn(state, [\"mode\"], {\n            mode: \"RESIZE_BOX\",\n            editLabelEditorAfter: true,\n            regionId: newRegion.id,\n            freedom: [1, 1],\n            original: { x, y, w: newRegion.w, h: newRegion.h },\n            isNew: true,\n          })\n          break\n        }\n        case \"polygon\": {\n\n          if (state.mode && state.mode.mode === \"DRAW_POLYGON\") break\n          state = saveToHistory(state, \"Create Polygon\")\n          newRegion = {\n            type: \"polygon\",\n            points: [\n              [x, y],\n              [x, y],\n            ],\n            open: true,\n            highlighted: true,\n            color: defaultRegionColor,\n            cls: defaultRegionCls,\n            id: getRandomId(),\n          }\n          state = setIn(state, [\"mode\"], {\n            mode: \"DRAW_POLYGON\",\n            regionId: newRegion.id,\n          })\n          break\n        }\n        case \"create-expanding-line\": {\n          state = saveToHistory(state, \"Create Expanding Line\")\n          newRegion = {\n            type: \"expanding-line\",\n            unfinished: true,\n            points: [{ x, y, angle: null, width: null }],\n            open: true,\n            highlighted: true,\n            color: defaultRegionColor,\n            cls: defaultRegionCls,\n            id: getRandomId(),\n          }\n          state = setIn(state, [\"mode\"], {\n            mode: \"DRAW_EXPANDING_LINE\",\n            regionId: newRegion.id,\n          })\n          break\n        }\n        case \"create-keypoints\": {\n          state = saveToHistory(state, \"Create Keypoints\")\n          const [\n            [keypointsDefinitionId, { landmarks, connections }],\n          ] = (Object.entries(state.keypointDefinitions): any)\n\n          newRegion = {\n            type: \"keypoints\",\n            keypointsDefinitionId,\n            points: getLandmarksWithTransform({\n              landmarks,\n              center: { x, y },\n              scale: 1,\n            }),\n            highlighted: true,\n            editingLabels: false,\n            id: getRandomId(),\n          }\n          state = setIn(state, [\"mode\"], {\n            mode: \"RESIZE_KEYPOINTS\",\n            landmarks,\n            centerX: x,\n            centerY: y,\n            regionId: newRegion.id,\n            isNew: true,\n          })\n          break\n        }\n        default:\n          break\n      }\n\n      const regions = [...(getIn(state, pathToActiveImage).regions || [])]\n        .map((r) =>\n          setIn(r, [\"editingLabels\"], false).setIn([\"highlighted\"], false)\n        )\n        .concat(newRegion ? [newRegion] : [])\n\n      return setIn(state, [...pathToActiveImage, \"regions\"], regions)\n    }\n    case \"MOUSE_UP\": {\n      const { x, y } = action\n\n      const { mouseDownAt = { x, y } } = state\n      if (!state.mode) return state\n      state = setIn(state, [\"mouseDownAt\"], null)\n      switch (state.mode.mode) {\n        case \"RESIZE_BOX\": {\n          if (state.mode.isNew) {\n            if (\n              Math.abs(state.mode.original.x - x) < 0.002 ||\n              Math.abs(state.mode.original.y - y) < 0.002\n            ) {\n              return setIn(\n                modifyRegion(state.mode.regionId, null),\n                [\"mode\"],\n                null\n              )\n            }\n          }\n          if (state.mode.editLabelEditorAfter) {\n            return {\n              ...modifyRegion(state.mode.regionId, { editingLabels: true }),\n              mode: null,\n            }\n          }\n        }\n        case \"MOVE_REGION\":\n        case \"RESIZE_KEYPOINTS\":\n        case \"MOVE_POLYGON_POINT\": {\n          // console.log(\"Moveee\")\n          return { ...state, mode: null }\n        }\n        case \"MOVE_KEYPOINT\": {\n          return { ...state, mode: null }\n        }\n        case \"CREATE_POINT_LINE\": {\n          return state\n        }\n        case \"DRAW_EXPANDING_LINE\": {\n          // console.log(\"Drawinggg\");\n          const [expandingLine, regionIndex] = getRegion(state.mode.regionId)\n          if (!expandingLine) return state\n          let newExpandingLine = expandingLine\n          const lastPoint =\n            expandingLine.points.length !== 0\n              ? expandingLine.points.slice(-1)[0]\n              : mouseDownAt\n          let jointStart\n          if (expandingLine.points.length > 1) {\n            jointStart = expandingLine.points.slice(-2)[0]\n          } else {\n            jointStart = lastPoint\n          }\n          const mouseDistFromLastPoint = Math.sqrt(\n            (lastPoint.x - x) ** 2 + (lastPoint.y - y) ** 2\n          )\n          if (mouseDistFromLastPoint > 0.002) {\n            // The user is drawing has drawn the width for the last point\n            const newPoints = [...expandingLine.points]\n            for (let i = 0; i < newPoints.length - 1; i++) {\n              if (newPoints[i].width) continue\n              newPoints[i] = {\n                ...newPoints[i],\n                width: lastPoint.width,\n              }\n            }\n            newExpandingLine = setIn(\n              expandingLine,\n              [\"points\"],\n              fixTwisted(newPoints)\n            )\n          } else {\n            return state\n          }\n          return setIn(\n            state,\n            [...pathToActiveImage, \"regions\", regionIndex],\n            newExpandingLine\n          )\n        }\n        default:\n          return state\n      }\n    }\n\n    case \"UPDATE_IMAGE_CANVAS\": {\n      return setNewImage(\n        state.images[action.payload.position],\n        action.payload.position\n      )\n    }\n\n    case \"OPEN_REGION_EDITOR\": {\n      const { region } = action\n      const regionIndex = getRegionIndex(action.region)\n      if (regionIndex === null) return state\n      const newRegions = setIn(\n        activeImage.regions.map((r) => ({\n          ...r,\n          highlighted: false,\n          editingLabels: false,\n        })),\n        [regionIndex],\n        {\n          ...(activeImage.regions || [])[regionIndex],\n          highlighted: true,\n          editingLabels: true,\n        }\n      )\n      return setIn(state, [...pathToActiveImage, \"regions\"], newRegions)\n    }\n    case \"CLOSE_REGION_EDITOR\": {\n      const { region } = action\n      const regionIndex = getRegionIndex(action.region)\n      if (regionIndex === null) return state\n      return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\n        ...(activeImage.regions || [])[regionIndex],\n        editingLabels: false,\n      })\n    }\n      \n    case 'CLICK_LABEL': {\n      const label = state.images[currentImageIndex].label;\n      console.log(\"Label\", label);\n      return setIn(\n        state,\n        [\"images\", currentImageIndex, \"label\"],\n        !label\n      )\n    }\n    case \"DELETE_REGION\": {\n      const regionIndex = getRegionIndex(action.region)\n      if (regionIndex === null) return state\n      const region = action.region;\n\n\n      state =  setIn(\n        state,\n        [...pathToActiveImage, \"regions\"],\n        (activeImage.regions || []).filter((r) => r.id !== action.region.id)\n      )\n\n      let historyCacheForActiveImage = getIn(state, ['historyCache', activeImage.name]);\n      if (historyCacheForActiveImage) {\n        historyCacheForActiveImage = Immutable.asMutable(historyCacheForActiveImage);\n        historyCacheForActiveImage.push(region)\n      } else {\n        historyCacheForActiveImage = [];\n        historyCacheForActiveImage.push(region)\n      }\n      return setIn(state, ['historyCache', activeImage.name], historyCacheForActiveImage);\n\n    }\n    case \"DELETE_SELECTED_REGION\": {\n      return setIn(\n        state,\n        [...pathToActiveImage, \"regions\"],\n        (activeImage.regions || []).filter((r) => !r.highlighted)\n      )\n    }\n    case \"FOOTER_BUTTON_CLICKED\": {\n      const buttonName = action.buttonName.toLowerCase()\n      switch (buttonName) {\n        case \"undo\": {\n          \n          // console.log(\"Original State: \", state);\n          // Check if current image has active regions to undo\n          if (activeImage.regions && activeImage.regions.length > 0) {\n\n            // get last region inserted to active image\n           let lastRegionAddedToActiveImage = getIn(state,\n            [...pathToActiveImage, \"regions\",activeImage.regions.length - 1])\n         \n\n            //Remove last region inserted to active image\n            state = \n            setIn(state,[...pathToActiveImage, \"regions\"], activeImage.regions.filter((element, index) => index < activeImage.regions.length - 1)) \n            \n             // Cache last active image region to historyCache\n            let historyCacheForActiveImage = getIn(state, ['historyCache', activeImage.name]);\n            if (historyCacheForActiveImage) {\n              historyCacheForActiveImage = Immutable.asMutable(historyCacheForActiveImage);\n              historyCacheForActiveImage.push(lastRegionAddedToActiveImage)\n            } else {\n              historyCacheForActiveImage = [];\n              historyCacheForActiveImage.push(lastRegionAddedToActiveImage)\n            }\n            state =  setIn(state, ['historyCache', activeImage.name], historyCacheForActiveImage);\n        \n          }\n          return state;\n        }\n        case \"redo\": {\n\n          // Check if we have regions in cache  to redo\n          if (state.historyCache && state.historyCache[activeImage.name] && state.historyCache[activeImage.name].length > 0) {\n            \n            // get last item inserted to history cache\n            // let lastRegionAddedToCache = getIn(state,\n            //   [\"historyCache\", state.historyCache.length - 1]);\n            let lastRegionAddedToCache = state.historyCache[activeImage.name][state.historyCache[activeImage.name].length - 1];\n\n            // remove last item from history cache.\n            state = \n              setIn(state, ['historyCache', activeImage.name], state.historyCache[activeImage.name].filter((element, index) => index < state.historyCache[activeImage.name].length - 1))\n\n\n            // console.log(\"lastRegionAddedToCache\", lastRegionAddedToCache)\n            // redo active image regions with last item popped from history cache\n            state = \n            setIn(state,[...pathToActiveImage, \"regions\",activeImage.regions.length],  lastRegionAddedToCache)\n            // return state.historyCache[0];\n            // console.log(\"After redoing regions \", state);\n           \n          }\n          return state;\n          \n        }\n        case 'reset': {\n          // console.log('Before reset: ', state);\n          if (activeImage.regions && activeImage.regions.length > 0) {\n            let historyCacheForActiveImage = getIn(state, ['historyCache', activeImage.name]);\n            if (historyCacheForActiveImage && historyCacheForActiveImage.length > 0) {\n             // clear history cache for current image.\n            state = \n              setIn(state,['historyCache',activeImage.name], [])\n            }\n            state = \n              setIn(state,['historyCache',activeImage.name], activeImage.regions)\n\n            state = \n              setIn(state,\n                [...pathToActiveImage, \"regions\"],\n                [])\n          }\n          \n            // state = setIn(state.history[state.history.length - 1].state, ['history'], []);\n            // console.log(\"After reset\", state);\n          \n      \n          return state;\n        }\n        case \"prev\": {\n          if (currentImageIndex === null) return state\n          if (currentImageIndex === 0) return state\n          return setNewImage(\n            state.images[currentImageIndex - 1],\n            currentImageIndex - 1\n          )\n        }\n        case \"next\": {\n          if (currentImageIndex === null) return state\n          if (currentImageIndex === state.images.length - 1) return state\n          return setNewImage(\n            state.images[currentImageIndex + 1],\n            currentImageIndex + 1\n          )\n        }\n\n        case \"save\": {\n          console.log(\"Save\");\n          return state\n        }\n\n        case 'nolabel': {\n          const shouldLabel = state.images[currentImageIndex].shouldLabel;\n      return setIn(\n        state,\n        [\"images\", currentImageIndex, \"shouldLabel\"],\n        !shouldLabel\n      )\n        }\n        \n        case \"clone\": {\n          if (currentImageIndex === null) return state\n          if (currentImageIndex === state.images.length - 1) return state\n          return setIn(\n            setNewImage(\n              state.images[currentImageIndex + 1],\n              currentImageIndex + 1\n            ),\n            [\"images\", currentImageIndex + 1, \"regions\"],\n            activeImage.regions\n          )\n        }\n        case \"settings\": {\n          return setIn(state, [\"settingsOpen\"], !state.settingsOpen)\n        }\n        case \"help\": {\n          return state\n        }\n        case \"fullscreen\": {\n          return setIn(state, [\"fullScreen\"], true)\n        }\n        case \"exit fullscreen\":\n        case \"window\": {\n          return setIn(state, [\"fullScreen\"], false)\n        }\n        case \"hotkeys\": {\n          return state\n        }\n        case \"exit\":\n        case \"done\": {\n          return state\n        }\n        default:\n          return state\n      }\n      break;\n    }\n   \n    case \"UPDATE_FILTER\": {\n        \n      // return setIn(state, [\"zoomOut\"], !state.zoomOut)\n      // console.log('Action:',action.payload.value);\n      let filter = getIn( state,\n        [...pathToActiveImage, \"filter\"])\n        if(!filter){\n          filter = {};\n          // filter['brightness'] = action.payload.value;\n       }\n      //  console.log('Payliad: ',filter);\n\n      const newState =  setIn(\n        state,\n        [...pathToActiveImage, \"filter\"],\n        {...filter,[action.payload.name]: action.payload.value}\n      )\n\n      return newState;\n        \n    }\n    case \"SELECT_TOOL\": {\n      state = setIn(state, [\"selectedTool\"], action.selectedTool)\n      if(action.selectedTool === 'inverse') {\n       let filter = getIn( state,\n        [...pathToActiveImage, \"filter\"])\n       if(!filter){\n         filter = {};\n         filter.inverse = 0;\n       }\n      state =  setIn(\n        state,\n        [...pathToActiveImage, \"filter\"],\n        {...filter,inverse: filter.inverse == 0 ? 100:0}\n      )      \n      }\n    \n       if (action.selectedTool === \"zoom-in\") {\n        state =  setIn(state, [\"zoomOut\"], !state.zoomOut)\n      }\n      if (action.selectedTool === \"modify-allowed-area\" && !state.allowedArea) {\n        state = setIn(state, [\"allowedArea\"], { x: 0, y: 0, w: 1, h: 1 })\n      }\n      return setIn(state, [\"mode\"], null)\n    }\n    case \"CANCEL\": {\n      const { mode } = state\n      if (mode) {\n        switch (mode.mode) {\n          case \"DRAW_EXPANDING_LINE\":\n          case \"SET_EXPANDING_LINE_WIDTH\":\n          case \"DRAW_POLYGON\": {\n            const { regionId } = mode\n            return modifyRegion(regionId, null)\n          }\n          case \"MOVE_POLYGON_POINT\":\n          case \"RESIZE_BOX\":\n          case \"MOVE_REGION\": {\n            return setIn(state, [\"mode\"], null)\n          }\n          default:\n            return state\n        }\n      }\n      // Close any open boxes\n      const regions: any = activeImage.regions\n      if (regions && regions.some((r) => r.editingLabels)) {\n        return setIn(\n          state,\n          [...pathToActiveImage, \"regions\"],\n          regions.map((r) => ({\n            ...r,\n            editingLabels: false,\n          }))\n        )\n      } else if (regions) {\n        return setIn(\n          state,\n          [...pathToActiveImage, \"regions\"],\n          regions.map((r) => ({\n            ...r,\n            highlighted: false,\n          }))\n        )\n      }\n      break\n    }\n    default:\n      break\n  }\n  return state\n}\n\n\nexport default generalReducer;","/Users/shahn/dev/annotator/custom_annotator/src/reportWebVitals.js",[],["409","410"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/SettingsProvider/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/get-implied-video-regions.js",["411"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/MainLayout/icon-dictionary.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/DebugSidebarBox/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/PreventScrollToParents/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionSelectAndTransformBoxes/index.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/ImageMask/load-image.js",[],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/Annotator/reducers/image-reducer.js",["412","413","414","415"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/HistorySidebarBox/index.js",["416","417"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/SidebarBoxContainer/index.js",["418","419","420","421","422","423","424"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/RegionTags/index.js",["425","426"],"/Users/shahn/dev/annotator/custom_annotator/src/Annotator/src/VideoOrImageCanvasBackground/index.js",["427","428","429","430"],"/Users/shahn/dev/annotator/custom_annotator/src/App.js",["431"],"import './App.css';\nimport Annotator from './components/Annotator';\nimport { SnackbarProvider, withSnackbar } from 'notistack'\nimport Message from './components/message';\nimport React,{useEffect} from 'react'\n\nfunction AppCore(props) {\n  useEffect(() => {\n    Message.registerNotistakEnqueueSnackbar(\n      props.enqueueSnackbar\n    )\n  }, []);\n  return (\n      <Annotator />\n  );\n}\n\n\n\nconst App  = (props) => {\n\n    const AppWithSnackbar = withSnackbar(AppCore)\n\n    return (\n      <SnackbarProvider\n        maxSnack={3}\n        anchorOrigin={{\n          horizontal: 'right',\n          vertical: 'top'\n        }}\n      >\n        <AppWithSnackbar {...props} />\n      </SnackbarProvider>\n    )\n}\nexport default App;\n\n\n\n",["432","433"],{"ruleId":"434","severity":1,"message":"435","line":4,"column":27,"nodeType":"436","messageId":"437","endLine":4,"endColumn":36},{"ruleId":"438","severity":1,"message":"439","line":24,"column":1,"nodeType":"440","endLine":60,"endColumn":2},{"ruleId":"441","replacedBy":"442"},{"ruleId":"443","replacedBy":"444"},{"ruleId":"438","severity":1,"message":"439","line":11,"column":1,"nodeType":"440","endLine":83,"endColumn":2},{"ruleId":"445","severity":1,"message":"446","line":32,"column":5,"nodeType":"447","messageId":"448","endLine":39,"endColumn":6},{"ruleId":"449","severity":1,"message":"450","line":33,"column":7,"nodeType":"451","messageId":"452","endLine":38,"endColumn":8},{"ruleId":"445","severity":1,"message":"446","line":40,"column":5,"nodeType":"447","messageId":"448","endLine":42,"endColumn":6},{"ruleId":"438","severity":1,"message":"439","line":3,"column":1,"nodeType":"440","endLine":21,"endColumn":2},{"ruleId":"438","severity":1,"message":"453","line":3,"column":1,"nodeType":"440","endLine":26,"endColumn":2},{"ruleId":"438","severity":1,"message":"439","line":9,"column":1,"nodeType":"440","endLine":17,"endColumn":2},{"ruleId":"434","severity":1,"message":"454","line":7,"column":10,"nodeType":"436","messageId":"437","endLine":7,"endColumn":14},{"ruleId":"434","severity":1,"message":"455","line":8,"column":8,"nodeType":"436","messageId":"437","endLine":8,"endColumn":12},{"ruleId":"434","severity":1,"message":"456","line":9,"column":8,"nodeType":"436","messageId":"437","endLine":9,"endColumn":16},{"ruleId":"434","severity":1,"message":"457","line":11,"column":8,"nodeType":"436","messageId":"437","endLine":11,"endColumn":14},{"ruleId":"434","severity":1,"message":"458","line":19,"column":9,"nodeType":"436","messageId":"437","endLine":19,"endColumn":16},{"ruleId":"441","replacedBy":"459"},{"ruleId":"443","replacedBy":"460"},{"ruleId":"461","severity":1,"message":"462","line":83,"column":3,"nodeType":"463","messageId":"464","endLine":83,"endColumn":13},{"ruleId":"438","severity":1,"message":"439","line":126,"column":1,"nodeType":"440","endLine":218,"endColumn":2},{"ruleId":"465","severity":1,"message":"466","line":144,"column":6,"nodeType":"467","endLine":144,"endColumn":19,"suggestions":"468"},{"ruleId":"434","severity":1,"message":"469","line":19,"column":3,"nodeType":"436","messageId":"437","endLine":19,"endColumn":22},{"ruleId":"434","severity":1,"message":"470","line":30,"column":8,"nodeType":"436","messageId":"437","endLine":30,"endColumn":18},{"ruleId":"434","severity":1,"message":"471","line":152,"column":10,"nodeType":"436","messageId":"437","endLine":152,"endColumn":26},{"ruleId":"434","severity":1,"message":"472","line":152,"column":28,"nodeType":"436","messageId":"437","endLine":152,"endColumn":50},{"ruleId":"434","severity":1,"message":"473","line":156,"column":9,"nodeType":"436","messageId":"437","endLine":156,"endColumn":19},{"ruleId":"434","severity":1,"message":"474","line":162,"column":38,"nodeType":"436","messageId":"437","endLine":162,"endColumn":44},{"ruleId":"465","severity":1,"message":"475","line":181,"column":49,"nodeType":"467","endLine":181,"endColumn":61,"suggestions":"476"},{"ruleId":"434","severity":1,"message":"477","line":183,"column":9,"nodeType":"436","messageId":"437","endLine":183,"endColumn":22},{"ruleId":"434","severity":1,"message":"478","line":248,"column":13,"nodeType":"436","messageId":"437","endLine":248,"endColumn":24},{"ruleId":"434","severity":1,"message":"479","line":248,"column":26,"nodeType":"436","messageId":"437","endLine":248,"endColumn":38},{"ruleId":"434","severity":1,"message":"480","line":1,"column":22,"nodeType":"436","messageId":"437","endLine":1,"endColumn":28},{"ruleId":"434","severity":1,"message":"481","line":1,"column":30,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"438","severity":1,"message":"453","line":3,"column":1,"nodeType":"440","endLine":54,"endColumn":2},{"ruleId":"438","severity":1,"message":"439","line":3,"column":1,"nodeType":"440","endLine":6,"endColumn":2},{"ruleId":"438","severity":1,"message":"439","line":7,"column":1,"nodeType":"440","endLine":53,"endColumn":2},{"ruleId":"434","severity":1,"message":"482","line":3,"column":17,"nodeType":"436","messageId":"437","endLine":3,"endColumn":25},{"ruleId":"434","severity":1,"message":"483","line":13,"column":8,"nodeType":"436","messageId":"437","endLine":13,"endColumn":16},{"ruleId":"484","severity":1,"message":"485","line":110,"column":41,"nodeType":"486","messageId":"464","endLine":110,"endColumn":43},{"ruleId":"438","severity":1,"message":"439","line":12,"column":1,"nodeType":"440","endLine":23,"endColumn":2},{"ruleId":"441","replacedBy":"487"},{"ruleId":"443","replacedBy":"488"},{"ruleId":"434","severity":1,"message":"489","line":36,"column":11,"nodeType":"436","messageId":"437","endLine":36,"endColumn":20},{"ruleId":"465","severity":1,"message":"490","line":207,"column":5,"nodeType":"467","endLine":207,"endColumn":14,"suggestions":"491"},{"ruleId":"465","severity":1,"message":"492","line":28,"column":6,"nodeType":"467","endLine":28,"endColumn":8,"suggestions":"493"},{"ruleId":"438","severity":1,"message":"439","line":8,"column":1,"nodeType":"440","endLine":170,"endColumn":2},{"ruleId":"434","severity":1,"message":"494","line":1,"column":16,"nodeType":"436","messageId":"437","endLine":1,"endColumn":20},{"ruleId":"434","severity":1,"message":"480","line":1,"column":22,"nodeType":"436","messageId":"437","endLine":1,"endColumn":28},{"ruleId":"434","severity":1,"message":"481","line":1,"column":30,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"438","severity":1,"message":"453","line":3,"column":1,"nodeType":"440","endLine":56,"endColumn":2},{"ruleId":"438","severity":1,"message":"495","line":1,"column":1,"nodeType":"440","endLine":1,"endColumn":280},{"ruleId":"434","severity":1,"message":"496","line":2,"column":8,"nodeType":"436","messageId":"437","endLine":2,"endColumn":18},{"ruleId":"434","severity":1,"message":"497","line":3,"column":8,"nodeType":"436","messageId":"437","endLine":3,"endColumn":18},{"ruleId":"434","severity":1,"message":"498","line":4,"column":8,"nodeType":"436","messageId":"437","endLine":4,"endColumn":20},{"ruleId":"434","severity":1,"message":"454","line":5,"column":10,"nodeType":"436","messageId":"437","endLine":5,"endColumn":14},{"ruleId":"434","severity":1,"message":"499","line":7,"column":8,"nodeType":"436","messageId":"437","endLine":7,"endColumn":18},{"ruleId":"434","severity":1,"message":"500","line":10,"column":8,"nodeType":"436","messageId":"437","endLine":10,"endColumn":20},{"ruleId":"434","severity":1,"message":"501","line":20,"column":7,"nodeType":"436","messageId":"437","endLine":20,"endColumn":13},{"ruleId":"434","severity":1,"message":"502","line":48,"column":10,"nodeType":"436","messageId":"437","endLine":48,"endColumn":19},{"ruleId":"434","severity":1,"message":"503","line":92,"column":7,"nodeType":"436","messageId":"437","endLine":92,"endColumn":20},{"ruleId":"434","severity":1,"message":"504","line":180,"column":7,"nodeType":"436","messageId":"437","endLine":180,"endColumn":16},{"ruleId":"434","severity":1,"message":"505","line":196,"column":7,"nodeType":"436","messageId":"437","endLine":196,"endColumn":25},{"ruleId":"434","severity":1,"message":"506","line":205,"column":7,"nodeType":"436","messageId":"437","endLine":205,"endColumn":14},{"ruleId":"434","severity":1,"message":"507","line":228,"column":20,"nodeType":"436","messageId":"437","endLine":228,"endColumn":34},{"ruleId":"434","severity":1,"message":"508","line":241,"column":9,"nodeType":"436","messageId":"437","endLine":241,"endColumn":23},{"ruleId":"509","severity":1,"message":"510","line":249,"column":13,"nodeType":"511","messageId":"512","endLine":249,"endColumn":48},{"ruleId":"441","replacedBy":"513"},{"ruleId":"443","replacedBy":"514"},{"ruleId":"434","severity":1,"message":"515","line":7,"column":3,"nodeType":"436","messageId":"437","endLine":7,"endColumn":11},{"ruleId":"434","severity":1,"message":"516","line":9,"column":3,"nodeType":"436","messageId":"437","endLine":9,"endColumn":7},{"ruleId":"465","severity":1,"message":"517","line":198,"column":6,"nodeType":"467","endLine":198,"endColumn":21,"suggestions":"518"},{"ruleId":"434","severity":1,"message":"519","line":10,"column":8,"nodeType":"436","messageId":"437","endLine":10,"endColumn":18},{"ruleId":"434","severity":1,"message":"520","line":14,"column":10,"nodeType":"436","messageId":"437","endLine":14,"endColumn":20},{"ruleId":"434","severity":1,"message":"521","line":20,"column":8,"nodeType":"436","messageId":"437","endLine":20,"endColumn":24},{"ruleId":"434","severity":1,"message":"522","line":22,"column":8,"nodeType":"436","messageId":"437","endLine":22,"endColumn":16},{"ruleId":"434","severity":1,"message":"523","line":23,"column":8,"nodeType":"436","messageId":"437","endLine":23,"endColumn":22},{"ruleId":"434","severity":1,"message":"524","line":24,"column":8,"nodeType":"436","messageId":"437","endLine":24,"endColumn":25},{"ruleId":"434","severity":1,"message":"525","line":25,"column":8,"nodeType":"436","messageId":"437","endLine":25,"endColumn":23},{"ruleId":"434","severity":1,"message":"526","line":26,"column":8,"nodeType":"436","messageId":"437","endLine":26,"endColumn":22},{"ruleId":"434","severity":1,"message":"527","line":28,"column":8,"nodeType":"436","messageId":"437","endLine":28,"endColumn":25},{"ruleId":"434","severity":1,"message":"528","line":31,"column":7,"nodeType":"436","messageId":"437","endLine":31,"endColumn":15},{"ruleId":"434","severity":1,"message":"529","line":34,"column":7,"nodeType":"436","messageId":"437","endLine":34,"endColumn":16},{"ruleId":"434","severity":1,"message":"458","line":67,"column":9,"nodeType":"436","messageId":"437","endLine":67,"endColumn":16},{"ruleId":"434","severity":1,"message":"530","line":69,"column":9,"nodeType":"436","messageId":"437","endLine":69,"endColumn":25},{"ruleId":"531","severity":1,"message":"532","line":83,"column":66,"nodeType":"533","messageId":"534","endLine":83,"endColumn":67},{"ruleId":"434","severity":1,"message":"535","line":107,"column":9,"nodeType":"436","messageId":"437","endLine":107,"endColumn":22},{"ruleId":"434","severity":1,"message":"536","line":109,"column":9,"nodeType":"436","messageId":"437","endLine":109,"endColumn":23},{"ruleId":"434","severity":1,"message":"537","line":113,"column":9,"nodeType":"436","messageId":"437","endLine":113,"endColumn":28},{"ruleId":"434","severity":1,"message":"538","line":260,"column":9,"nodeType":"436","messageId":"437","endLine":260,"endColumn":20},{"ruleId":"434","severity":1,"message":"539","line":261,"column":9,"nodeType":"436","messageId":"437","endLine":261,"endColumn":28},{"ruleId":"540","severity":1,"message":"541","line":145,"column":3,"nodeType":"542","messageId":"543","endLine":145,"endColumn":36},{"ruleId":"449","severity":1,"message":"450","line":149,"column":3,"nodeType":"451","messageId":"452","endLine":156,"endColumn":4},{"ruleId":"434","severity":1,"message":"544","line":12,"column":7,"nodeType":"436","messageId":"437","endLine":12,"endColumn":16},{"ruleId":"434","severity":1,"message":"545","line":3,"column":17,"nodeType":"436","messageId":"437","endLine":3,"endColumn":25},{"ruleId":"434","severity":1,"message":"502","line":51,"column":10,"nodeType":"436","messageId":"437","endLine":51,"endColumn":19},{"ruleId":"438","severity":1,"message":"439","line":6,"column":1,"nodeType":"440","endLine":27,"endColumn":2},{"ruleId":"434","severity":1,"message":"454","line":3,"column":10,"nodeType":"436","messageId":"437","endLine":3,"endColumn":14},{"ruleId":"434","severity":1,"message":"546","line":14,"column":10,"nodeType":"436","messageId":"437","endLine":14,"endColumn":26},{"ruleId":"434","severity":1,"message":"547","line":3,"column":47,"nodeType":"436","messageId":"437","endLine":3,"endColumn":53},{"ruleId":"434","severity":1,"message":"548","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":19},{"ruleId":"465","severity":1,"message":"549","line":72,"column":6,"nodeType":"467","endLine":72,"endColumn":16,"suggestions":"550"},{"ruleId":"449","severity":1,"message":"450","line":70,"column":3,"nodeType":"451","messageId":"452","endLine":121,"endColumn":4},{"ruleId":"438","severity":1,"message":"453","line":5,"column":1,"nodeType":"440","endLine":47,"endColumn":2},{"ruleId":"434","severity":1,"message":"496","line":2,"column":8,"nodeType":"436","messageId":"437","endLine":2,"endColumn":18},{"ruleId":"434","severity":1,"message":"497","line":3,"column":8,"nodeType":"436","messageId":"437","endLine":3,"endColumn":18},{"ruleId":"434","severity":1,"message":"498","line":4,"column":8,"nodeType":"436","messageId":"437","endLine":4,"endColumn":20},{"ruleId":"434","severity":1,"message":"454","line":5,"column":10,"nodeType":"436","messageId":"437","endLine":5,"endColumn":14},{"ruleId":"434","severity":1,"message":"499","line":7,"column":8,"nodeType":"436","messageId":"437","endLine":7,"endColumn":18},{"ruleId":"434","severity":1,"message":"500","line":10,"column":8,"nodeType":"436","messageId":"437","endLine":10,"endColumn":20},{"ruleId":"434","severity":1,"message":"551","line":11,"column":8,"nodeType":"436","messageId":"437","endLine":11,"endColumn":17},{"ruleId":"434","severity":1,"message":"501","line":20,"column":7,"nodeType":"436","messageId":"437","endLine":20,"endColumn":13},{"ruleId":"434","severity":1,"message":"502","line":47,"column":10,"nodeType":"436","messageId":"437","endLine":47,"endColumn":19},{"ruleId":"434","severity":1,"message":"503","line":88,"column":7,"nodeType":"436","messageId":"437","endLine":88,"endColumn":20},{"ruleId":"434","severity":1,"message":"504","line":165,"column":7,"nodeType":"436","messageId":"437","endLine":165,"endColumn":16},{"ruleId":"434","severity":1,"message":"505","line":181,"column":7,"nodeType":"436","messageId":"437","endLine":181,"endColumn":25},{"ruleId":"434","severity":1,"message":"507","line":211,"column":20,"nodeType":"436","messageId":"437","endLine":211,"endColumn":34},{"ruleId":"434","severity":1,"message":"508","line":224,"column":9,"nodeType":"436","messageId":"437","endLine":224,"endColumn":23},{"ruleId":"434","severity":1,"message":"552","line":2,"column":32,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"553","line":4,"column":34,"nodeType":"436","messageId":"437","endLine":4,"endColumn":42},{"ruleId":"434","severity":1,"message":"554","line":5,"column":8,"nodeType":"436","messageId":"437","endLine":5,"endColumn":14},{"ruleId":"434","severity":1,"message":"555","line":87,"column":9,"nodeType":"436","messageId":"437","endLine":87,"endColumn":24},{"ruleId":"434","severity":1,"message":"556","line":112,"column":11,"nodeType":"436","messageId":"437","endLine":112,"endColumn":14},{"ruleId":"434","severity":1,"message":"557","line":315,"column":15,"nodeType":"436","messageId":"437","endLine":315,"endColumn":26},{"ruleId":"540","severity":1,"message":"541","line":489,"column":11,"nodeType":"558","messageId":"543","endLine":489,"endColumn":23},{"ruleId":"434","severity":1,"message":"557","line":496,"column":19,"nodeType":"436","messageId":"437","endLine":496,"endColumn":30},{"ruleId":"434","severity":1,"message":"559","line":673,"column":50,"nodeType":"436","messageId":"437","endLine":673,"endColumn":61},{"ruleId":"445","severity":1,"message":"446","line":737,"column":9,"nodeType":"447","messageId":"448","endLine":737,"endColumn":28},{"ruleId":"434","severity":1,"message":"560","line":762,"column":13,"nodeType":"436","messageId":"437","endLine":762,"endColumn":23},{"ruleId":"434","severity":1,"message":"561","line":804,"column":15,"nodeType":"436","messageId":"437","endLine":804,"endColumn":21},{"ruleId":"434","severity":1,"message":"561","line":823,"column":15,"nodeType":"436","messageId":"437","endLine":823,"endColumn":21},{"ruleId":"540","severity":1,"message":"541","line":1019,"column":7,"nodeType":"562","messageId":"543","endLine":1019,"endColumn":13},{"ruleId":"484","severity":1,"message":"485","line":1055,"column":44,"nodeType":"486","messageId":"464","endLine":1055,"endColumn":46},{"ruleId":"441","replacedBy":"563"},{"ruleId":"443","replacedBy":"564"},{"ruleId":"438","severity":1,"message":"439","line":7,"column":1,"nodeType":"440","endLine":99,"endColumn":2},{"ruleId":"438","severity":1,"message":"439","line":10,"column":1,"nodeType":"440","endLine":24,"endColumn":2},{"ruleId":"434","severity":1,"message":"565","line":11,"column":30,"nodeType":"436","messageId":"437","endLine":11,"endColumn":47},{"ruleId":"434","severity":1,"message":"566","line":11,"column":49,"nodeType":"436","messageId":"437","endLine":11,"endColumn":60},{"ruleId":"449","severity":1,"message":"450","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":22,"endColumn":4},{"ruleId":"434","severity":1,"message":"567","line":3,"column":17,"nodeType":"436","messageId":"437","endLine":3,"endColumn":25},{"ruleId":"434","severity":1,"message":"568","line":16,"column":8,"nodeType":"436","messageId":"437","endLine":16,"endColumn":11},{"ruleId":"434","severity":1,"message":"569","line":4,"column":8,"nodeType":"436","messageId":"437","endLine":4,"endColumn":13},{"ruleId":"434","severity":1,"message":"497","line":6,"column":8,"nodeType":"436","messageId":"437","endLine":6,"endColumn":18},{"ruleId":"434","severity":1,"message":"570","line":7,"column":8,"nodeType":"436","messageId":"437","endLine":7,"endColumn":18},{"ruleId":"434","severity":1,"message":"571","line":8,"column":8,"nodeType":"436","messageId":"437","endLine":8,"endColumn":16},{"ruleId":"434","severity":1,"message":"572","line":70,"column":9,"nodeType":"436","messageId":"437","endLine":70,"endColumn":16},{"ruleId":"434","severity":1,"message":"507","line":79,"column":9,"nodeType":"436","messageId":"437","endLine":79,"endColumn":23},{"ruleId":"540","severity":1,"message":"541","line":87,"column":3,"nodeType":"558","messageId":"543","endLine":106,"endColumn":4},{"ruleId":"434","severity":1,"message":"573","line":37,"column":15,"nodeType":"436","messageId":"437","endLine":37,"endColumn":17},{"ruleId":"434","severity":1,"message":"574","line":37,"column":19,"nodeType":"436","messageId":"437","endLine":37,"endColumn":21},{"ruleId":"438","severity":1,"message":"439","line":32,"column":1,"nodeType":"440","endLine":172,"endColumn":2},{"ruleId":"465","severity":1,"message":"575","line":54,"column":6,"nodeType":"467","endLine":54,"endColumn":17,"suggestions":"576"},{"ruleId":"465","severity":1,"message":"577","line":90,"column":6,"nodeType":"467","endLine":90,"endColumn":20,"suggestions":"578"},{"ruleId":"465","severity":1,"message":"579","line":136,"column":6,"nodeType":"467","endLine":142,"endColumn":4,"suggestions":"580"},{"ruleId":"465","severity":1,"message":"581","line":12,"column":6,"nodeType":"467","endLine":12,"endColumn":8,"suggestions":"582"},{"ruleId":"441","replacedBy":"583"},{"ruleId":"443","replacedBy":"584"},"no-unused-vars","'asMutable' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["585"],"no-negated-in-lhs",["586"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Assign object to a variable before exporting as module default","'grey' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Avatar' is defined but never used.","'classes' is assigned a value but never used.",["585"],["586"],"no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'instantCurrentTime'. Either include it or remove the dependency array.","ArrayExpression",["587"],"'KeypointsDefinition' is defined but never used.","'RegionTags' is defined but never used.","'maskImagesLoaded' is assigned a value but never used.","'changeMaskImagesLoaded' is assigned a value but never used.","'maskImages' is assigned a value but never used.","'zoomIn' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'changeMat' and 'mat'. Either include them or remove the dependency array.",["588"],"'innerMousePos' is assigned a value but never used.","'clientWidth' is assigned a value but never used.","'clientHeight' is assigned a value but never used.","'orange' is defined but never used.","'purple' is defined but never used.","'useState' is defined but never used.","'UndoIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["585"],["586"],"'alphaBase' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ih', 'iw', 'onRegionChange', and 'svg'. Either include them or remove the dependency array. If 'onRegionChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["589"],"React Hook useEffect has missing dependencies: 'isClient' and 'setState'. Either include them or remove the dependency array.",["590"],"'blue' is defined but never used.","Assign literal to a variable before exporting as module default","'ButtonBase' is defined but never used.","'ExpandIcon' is defined but never used.","'ContractIcon' is defined but never used.","'RegionIcon' is defined but never used.","'PieChartIcon' is defined but never used.","'colors' is assigned a value but never used.","'mouseOver' is assigned a value but never used.","'MemoRowHeader' is assigned a value but never used.","'Container' is assigned a value but never used.","'InnerSliderContent' is assigned a value but never used.","'MemoRow' is assigned a value but never used.","'toggleExpanded' is assigned a value but never used.","'containerStyle' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["585"],["586"],"'ToolEnum' is defined but never used.","'Mode' is defined but never used.","React Hook useEffect has a missing dependency: 'state.images'. Either include it or remove the dependency array.",["591"],"'classnames' is defined but never used.","'FullScreen' is defined but never used.","'KeyframeTimeline' is defined but never used.","'DebugBox' is defined but never used.","'TagsSidebarBox' is defined but never used.","'KeyframesSelector' is defined but never used.","'TaskDescription' is defined but never used.","'RegionSelector' is defined but never used.","'HistorySidebarBox' is defined but never used.","'emptyArr' is assigned a value but never used.","'HotkeyDiv' is assigned a value but never used.","'fullScreenHandle' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'isAVideoFrame' is assigned a value but never used.","'hotkeyHandlers' is assigned a value but never used.","'refocusOnMouseEvent' is assigned a value but never used.","'debugModeOn' is assigned a value but never used.","'nextImageHasRegions' is assigned a value but never used.","no-unreachable","Unreachable code.","ThrowStatement","unreachableCode","'useStyles' is assigned a value but never used.","'Fragment' is defined but never used.","'forceRenderState' is assigned a value but never used.","'useRef' is defined but never used.","'colorInts' is defined but never used.","React Hook useEffect has missing dependencies: 'autoSegmentationOptions' and 'regionClsList'. Either include them or remove the dependency array.",["592"],"'TrashIcon' is defined but never used.","'Action' is defined but never used.","'updateIn' is defined but never used.","'moment' is defined but never used.","'unselectRegions' is assigned a value but never used.","'src' is assigned a value but never used.","'mouseDownAt' is assigned a value but never used.","ReturnStatement","'connections' is assigned a value but never used.","'jointStart' is assigned a value but never used.","'region' is assigned a value but never used.","BreakStatement",["585"],["586"],"'pathToActiveImage' is assigned a value but never used.","'activeImage' is assigned a value but never used.","'setState' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'Collapse' is defined but never used.","'content' is assigned a value but never used.","'iw' is assigned a value but never used.","'ih' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'videoPlaying'. Either include it or remove the dependency array.",["593"],"React Hook useEffect has missing dependencies: 'onChangeVideoPlaying', 'onChangeVideoTime', 'settings.videoPlaybackSpeed', and 'videoTime'. Either include them or remove the dependency array. If 'onChangeVideoTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["594"],"React Hook useMemo has an unnecessary dependency: 'activeImage.filter'. Either exclude it or remove the dependency array.",["595"],"React Hook useEffect has a missing dependency: 'props.enqueueSnackbar'. Either include it or remove the dependency array.",["596"],["585"],["586"],"no-global-assign","no-unsafe-negation",{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},"Update the dependencies array to be: [currentTime, instantCurrentTime]",{"range":"617","text":"618"},"Update the dependencies array to be: [changeMat, mat, windowSize]",{"range":"619","text":"620"},"Update the dependencies array to be: [ih, iw, onRegionChange, regions, svg]",{"range":"621","text":"622"},"Update the dependencies array to be: [isClient, setState]",{"range":"623","text":"624"},"Update the dependencies array to be: [selectedImage, state.images]",{"range":"625","text":"626"},"Update the dependencies array to be: [autoSegmentationOptions, imageSrc, regionClsList]",{"range":"627","text":"628"},"Update the dependencies array to be: [videoPlaying, videoTime]",{"range":"629","text":"630"},"Update the dependencies array to be: [onChangeVideoPlaying, onChangeVideoTime, settings.videoPlaybackSpeed, videoPlaying, videoTime]",{"range":"631","text":"632"},"Update the dependencies array to be: [imagePosition.topLeft.x, imagePosition.topLeft.y, imagePosition.bottomRight.x, imagePosition.bottomRight.y]",{"range":"633","text":"634"},"Update the dependencies array to be: [props.enqueueSnackbar]",{"range":"635","text":"636"},[3357,3370],"[currentTime, instantCurrentTime]",[5265,5277],"[changeMat, mat, windowSize]",[6190,6199],"[ih, iw, onRegionChange, regions, svg]",[724,726],"[isClient, setState]",[5632,5647],"[selectedImage, state.images]",[1765,1775],"[autoSegmentationOptions, imageSrc, regionClsList]",[1097,1108],"[videoPlaying, videoTime]",[2029,2043],"[onChangeVideoPlaying, onChangeVideoTime, settings.videoPlaybackSpeed, videoPlaying, videoTime]",[3895,4051],"[imagePosition.topLeft.x, imagePosition.topLeft.y, imagePosition.bottomRight.x, imagePosition.bottomRight.y]",[340,342],"[props.enqueueSnackbar]"]